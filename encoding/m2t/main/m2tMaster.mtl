[comment encoding = UTF-8 /]
[**
 * Master for generating target languages on the basis of a UML class model
 * 
 * The model should comply to the the rules described in the
 * document "UML Class Diagram Practitioner's Subset for Data Modeling".
 * See {@https://ddi-alliance.bitbucket.io/DDI-CDI/DDI-CDI_Public_Review_1/}.
 */]
[module m2tMaster('http://www.eclipse.org/uml2/5.0.0/Types', 'http://www.eclipse.org/uml2/5.0.0/UML', 'http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard')]

[import ucmis::m2t::target::doc::modelDocFile /]
[import ucmis::m2t::target::jsonld::modelJsonldFile /]
[import ucmis::m2t::target::onto::packageOntoFile /]
[import ucmis::m2t::target::oo::modelOoFile /]
[import ucmis::m2t::target::xsd::modelXsdFile /]
[import ucmis::m2t::mapping::representation /]

[**
 * Process a UML class model
 * 
 * Options can be set in a property file.
 * Current options are: ootest, doc.
 * 
 * ootest - template for the generation of object-oriented languages
 * 
 * It generates a file hierarchy corresponding to the package/class hierarchy
 * in the model. This results in a file per package, per class, and per
 * data type with detailed information.
 */]
[template public processModel(aModel : Model) ]
[comment @main/]
[if ( aModel.name = 'UCMISExample' ) ]
	[documentRepresentation(aModel)/]
[else]
	[if (getProperty('doc').trim().equalsIgnoreCase('true') ) ]
		[processModelDoc(aModel)/]
	[/if]
	[if (getProperty('jsonld').trim().equalsIgnoreCase('true') ) ]
		[generateJsonld(aModel) /]
	[/if]
	[if (getProperty('oo').trim().equalsIgnoreCase('true') ) ]
		[processModelOo(aModel) /]
	[/if]
	[if (getProperty('onto').trim().equalsIgnoreCase('true') ) ]
		[packageOntoFile(aModel) /]
	[/if]
	[if (getProperty('xsd').trim().equalsIgnoreCase('true') ) ]
		[processModelXsd(aModel) /]
	[/if]
[/if]
[/template]
