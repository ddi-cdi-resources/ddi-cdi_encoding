//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ddialliance.specification.ddi_cdi._1_0.xmlschema;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Definition 
 *             ============ 
 *             A variable at the highest level of abstraction.
 *               
 *             Examples 
 *             ========== 
 *             A gender variable defining two categories – "male" and "female" allowing relating each of these to concepts having description of how these categories are decided.
 *             
 *             Explanatory notes 
 *             =================== 
 *             The conceptual variable allows for describing the domain of concepts it can take on as well as the type of unit that can be measured. A conceptual variable for blood pressure might, for example describe the conditions under which the pressure is to be taken (sitting as opposed to standing) and a conceptual value domain as height of mercury – without units. One represented variable would further refine this by specifying inches as the unit of measurement for the height. Another might specify that the height be represented in centimeters. Both represented variables could reference the same conceptual variable to indicate in what way they are comparable.
 * 
 * <p>Java class for ConceptualVariable complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="ConceptualVariable">
 *   <complexContent>
 *     <extension base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Concept">
 *       <sequence>
 *         <element name="descriptiveText" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalString" minOccurs="0"/>
 *         <element name="unitOfMeasureKind" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}ControlledVocabularyEntry" minOccurs="0"/>
 *         <element name="ConceptualVariable_takesSentinelConceptsFrom_SentinelConceptualDomain" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
 *                 <sequence>
 *                   <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
 *                   <element name="validType" maxOccurs="unbounded" minOccurs="0">
 *                     <simpleType>
 *                       <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                         <enumeration value="SentinelConceptualDomain"/>
 *                       </restriction>
 *                     </simpleType>
 *                   </element>
 *                 </sequence>
 *                 <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="ConceptualVariable_takesSubstantiveConceptsFrom_SubstantiveConceptualDomain" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
 *                 <sequence>
 *                   <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
 *                   <element name="validType" maxOccurs="unbounded" minOccurs="0">
 *                     <simpleType>
 *                       <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                         <enumeration value="SubstantiveConceptualDomain"/>
 *                       </restriction>
 *                     </simpleType>
 *                   </element>
 *                 </sequence>
 *                 <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="ConceptualVariable_measures_UnitType" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
 *                 <sequence>
 *                   <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
 *                   <element name="validType" maxOccurs="unbounded" minOccurs="0">
 *                     <simpleType>
 *                       <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                         <enumeration value="Population"/>
 *                         <enumeration value="UnitType"/>
 *                         <enumeration value="Universe"/>
 *                       </restriction>
 *                     </simpleType>
 *                   </element>
 *                 </sequence>
 *                 <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *       </sequence>
 *     </extension>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ConceptualVariable", propOrder = {
    "descriptiveText",
    "unitOfMeasureKind",
    "conceptualVariableTakesSentinelConceptsFromSentinelConceptualDomain",
    "conceptualVariableTakesSubstantiveConceptsFromSubstantiveConceptualDomain",
    "conceptualVariableMeasuresUnitType"
})
@XmlSeeAlso({
    RepresentedVariable.class
})
public class ConceptualVariable
    extends Concept
{

    protected InternationalString descriptiveText;
    protected ControlledVocabularyEntry unitOfMeasureKind;
    @XmlElement(name = "ConceptualVariable_takesSentinelConceptsFrom_SentinelConceptualDomain")
    protected ConceptualVariable.ConceptualVariableTakesSentinelConceptsFromSentinelConceptualDomain conceptualVariableTakesSentinelConceptsFromSentinelConceptualDomain;
    @XmlElement(name = "ConceptualVariable_takesSubstantiveConceptsFrom_SubstantiveConceptualDomain")
    protected ConceptualVariable.ConceptualVariableTakesSubstantiveConceptsFromSubstantiveConceptualDomain conceptualVariableTakesSubstantiveConceptsFromSubstantiveConceptualDomain;
    @XmlElement(name = "ConceptualVariable_measures_UnitType")
    protected ConceptualVariable.ConceptualVariableMeasuresUnitType conceptualVariableMeasuresUnitType;

    /**
     * Gets the value of the descriptiveText property.
     * 
     * @return
     *     possible object is
     *     {@link InternationalString }
     *     
     */
    public InternationalString getDescriptiveText() {
        return descriptiveText;
    }

    /**
     * Sets the value of the descriptiveText property.
     * 
     * @param value
     *     allowed object is
     *     {@link InternationalString }
     *     
     */
    public void setDescriptiveText(InternationalString value) {
        this.descriptiveText = value;
    }

    /**
     * Gets the value of the unitOfMeasureKind property.
     * 
     * @return
     *     possible object is
     *     {@link ControlledVocabularyEntry }
     *     
     */
    public ControlledVocabularyEntry getUnitOfMeasureKind() {
        return unitOfMeasureKind;
    }

    /**
     * Sets the value of the unitOfMeasureKind property.
     * 
     * @param value
     *     allowed object is
     *     {@link ControlledVocabularyEntry }
     *     
     */
    public void setUnitOfMeasureKind(ControlledVocabularyEntry value) {
        this.unitOfMeasureKind = value;
    }

    /**
     * Gets the value of the conceptualVariableTakesSentinelConceptsFromSentinelConceptualDomain property.
     * 
     * @return
     *     possible object is
     *     {@link ConceptualVariable.ConceptualVariableTakesSentinelConceptsFromSentinelConceptualDomain }
     *     
     */
    public ConceptualVariable.ConceptualVariableTakesSentinelConceptsFromSentinelConceptualDomain getConceptualVariableTakesSentinelConceptsFromSentinelConceptualDomain() {
        return conceptualVariableTakesSentinelConceptsFromSentinelConceptualDomain;
    }

    /**
     * Sets the value of the conceptualVariableTakesSentinelConceptsFromSentinelConceptualDomain property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConceptualVariable.ConceptualVariableTakesSentinelConceptsFromSentinelConceptualDomain }
     *     
     */
    public void setConceptualVariableTakesSentinelConceptsFromSentinelConceptualDomain(ConceptualVariable.ConceptualVariableTakesSentinelConceptsFromSentinelConceptualDomain value) {
        this.conceptualVariableTakesSentinelConceptsFromSentinelConceptualDomain = value;
    }

    /**
     * Gets the value of the conceptualVariableTakesSubstantiveConceptsFromSubstantiveConceptualDomain property.
     * 
     * @return
     *     possible object is
     *     {@link ConceptualVariable.ConceptualVariableTakesSubstantiveConceptsFromSubstantiveConceptualDomain }
     *     
     */
    public ConceptualVariable.ConceptualVariableTakesSubstantiveConceptsFromSubstantiveConceptualDomain getConceptualVariableTakesSubstantiveConceptsFromSubstantiveConceptualDomain() {
        return conceptualVariableTakesSubstantiveConceptsFromSubstantiveConceptualDomain;
    }

    /**
     * Sets the value of the conceptualVariableTakesSubstantiveConceptsFromSubstantiveConceptualDomain property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConceptualVariable.ConceptualVariableTakesSubstantiveConceptsFromSubstantiveConceptualDomain }
     *     
     */
    public void setConceptualVariableTakesSubstantiveConceptsFromSubstantiveConceptualDomain(ConceptualVariable.ConceptualVariableTakesSubstantiveConceptsFromSubstantiveConceptualDomain value) {
        this.conceptualVariableTakesSubstantiveConceptsFromSubstantiveConceptualDomain = value;
    }

    /**
     * Gets the value of the conceptualVariableMeasuresUnitType property.
     * 
     * @return
     *     possible object is
     *     {@link ConceptualVariable.ConceptualVariableMeasuresUnitType }
     *     
     */
    public ConceptualVariable.ConceptualVariableMeasuresUnitType getConceptualVariableMeasuresUnitType() {
        return conceptualVariableMeasuresUnitType;
    }

    /**
     * Sets the value of the conceptualVariableMeasuresUnitType property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConceptualVariable.ConceptualVariableMeasuresUnitType }
     *     
     */
    public void setConceptualVariableMeasuresUnitType(ConceptualVariable.ConceptualVariableMeasuresUnitType value) {
        this.conceptualVariableMeasuresUnitType = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
     *       <sequence>
     *         <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
     *         <element name="validType" maxOccurs="unbounded" minOccurs="0">
     *           <simpleType>
     *             <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *               <enumeration value="Population"/>
     *               <enumeration value="UnitType"/>
     *               <enumeration value="Universe"/>
     *             </restriction>
     *           </simpleType>
     *         </element>
     *       </sequence>
     *       <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class ConceptualVariableMeasuresUnitType
        extends Reference
    {


    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
     *       <sequence>
     *         <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
     *         <element name="validType" maxOccurs="unbounded" minOccurs="0">
     *           <simpleType>
     *             <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *               <enumeration value="SentinelConceptualDomain"/>
     *             </restriction>
     *           </simpleType>
     *         </element>
     *       </sequence>
     *       <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class ConceptualVariableTakesSentinelConceptsFromSentinelConceptualDomain
        extends Reference
    {


    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
     *       <sequence>
     *         <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
     *         <element name="validType" maxOccurs="unbounded" minOccurs="0">
     *           <simpleType>
     *             <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *               <enumeration value="SubstantiveConceptualDomain"/>
     *             </restriction>
     *           </simpleType>
     *         </element>
     *       </sequence>
     *       <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class ConceptualVariableTakesSubstantiveConceptsFromSubstantiveConceptualDomain
        extends Reference
    {


    }

}
