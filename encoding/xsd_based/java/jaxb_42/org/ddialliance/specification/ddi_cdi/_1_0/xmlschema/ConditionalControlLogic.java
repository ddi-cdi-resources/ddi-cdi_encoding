//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ddialliance.specification.ddi_cdi._1_0.xmlschema;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Definition 
 *             ============ 
 *             A set of decision points which determine the flow between the steps used to perform an activity. 
 *             
 *             Examples 
 *             ========== 
 *             Loop, IfThenElse, RepeatWhile, etc.
 * 
 * <p>Java class for ConditionalControlLogic complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="ConditionalControlLogic">
 *   <complexContent>
 *     <extension base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}DeterministicImperative">
 *       <sequence>
 *         <element name="condition" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}CommandCode"/>
 *         <element name="construct" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}ControlConstruct"/>
 *       </sequence>
 *     </extension>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ConditionalControlLogic", propOrder = {
    "condition",
    "construct"
})
public class ConditionalControlLogic
    extends DeterministicImperative
{

    @XmlElement(required = true)
    protected CommandCode condition;
    @XmlElement(required = true)
    @XmlSchemaType(name = "NMTOKEN")
    protected ControlConstruct construct;

    /**
     * Gets the value of the condition property.
     * 
     * @return
     *     possible object is
     *     {@link CommandCode }
     *     
     */
    public CommandCode getCondition() {
        return condition;
    }

    /**
     * Sets the value of the condition property.
     * 
     * @param value
     *     allowed object is
     *     {@link CommandCode }
     *     
     */
    public void setCondition(CommandCode value) {
        this.condition = value;
    }

    /**
     * Gets the value of the construct property.
     * 
     * @return
     *     possible object is
     *     {@link ControlConstruct }
     *     
     */
    public ControlConstruct getConstruct() {
        return construct;
    }

    /**
     * Sets the value of the construct property.
     * 
     * @param value
     *     allowed object is
     *     {@link ControlConstruct }
     *     
     */
    public void setConstruct(ControlConstruct value) {
        this.construct = value;
    }

}
