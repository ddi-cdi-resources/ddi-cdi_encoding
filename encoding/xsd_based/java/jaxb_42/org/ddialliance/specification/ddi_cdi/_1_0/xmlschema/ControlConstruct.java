//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ddialliance.specification.ddi_cdi._1_0.xmlschema;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ControlConstruct.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>{@code
 * <simpleType name="ControlConstruct">
 *   <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *     <enumeration value="Else"/>
 *     <enumeration value="IfThen"/>
 *     <enumeration value="Loop"/>
 *     <enumeration value="RepeatUntil"/>
 *     <enumeration value="RepeatWhile"/>
 *   </restriction>
 * </simpleType>
 * }</pre>
 * 
 */
@XmlType(name = "ControlConstruct")
@XmlEnum
public enum ControlConstruct {


    /**
     * Describes an Else type of control construct.
     * 
     */
    @XmlEnumValue("Else")
    ELSE("Else"),

    /**
     * Describes an IfThen type of control construct.  If the stated condition is met, the Then clause is triggered.
     * 
     */
    @XmlEnumValue("IfThen")
    IF_THEN("IfThen"),

    /**
     * Describes a Loop type of control construct (loops until a limiting condition is met).
     * 
     */
    @XmlEnumValue("Loop")
    LOOP("Loop"),

    /**
     * Describes an RepeatUntil type of control construct (to be repeated until a specified condition is met).
     * 
     */
    @XmlEnumValue("RepeatUntil")
    REPEAT_UNTIL("RepeatUntil"),

    /**
     * Describes a RepeatWhile type of control construct (to be repeated while a specified condition is met).
     * 
     */
    @XmlEnumValue("RepeatWhile")
    REPEAT_WHILE("RepeatWhile");
    private final String value;

    ControlConstruct(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ControlConstruct fromValue(String v) {
        for (ControlConstruct c: ControlConstruct.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
