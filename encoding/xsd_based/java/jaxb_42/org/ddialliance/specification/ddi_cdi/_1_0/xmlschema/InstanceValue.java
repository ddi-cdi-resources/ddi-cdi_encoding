//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ddialliance.specification.ddi_cdi._1_0.xmlschema;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Definition 
 *             ============ 
 *             Single data instance corresponding to a concept (with a notion of equality defined) being observed, captured, or derived.  
 *             
 *             Examples 
 *             ========== 
 *             A systolic blood pressure of 122 is measured. The single data instance (instance value) for that measurement is the character string "122". The associated measured concept (a blood pressure at that level) is the conceptual value.     
 *             
 *             Explanatory notes 
 *             =================== 
 *             This is the actual instance of data that populates a data point (the signifier of a datum in the signification pattern). The instance value comes from a value domain associated with an instance variable which allows the attachment of a unit of measurement, a datatype, and a population.
 * 
 * <p>Java class for InstanceValue complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="InstanceValue">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="content" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}TypedString" minOccurs="0"/>
 *         <element name="identifier" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Identifier" minOccurs="0"/>
 *         <element name="whiteSpace" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}WhiteSpaceRule" minOccurs="0"/>
 *         <element name="InstanceValue_hasValueFrom_ValueDomain">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
 *                 <sequence>
 *                   <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
 *                   <element name="validType" maxOccurs="unbounded" minOccurs="0">
 *                     <simpleType>
 *                       <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                         <enumeration value="DescriptorValueDomain"/>
 *                         <enumeration value="ReferenceValueDomain"/>
 *                         <enumeration value="SentinelValueDomain"/>
 *                         <enumeration value="SubstantiveValueDomain"/>
 *                         <enumeration value="ValueDomain"/>
 *                       </restriction>
 *                     </simpleType>
 *                   </element>
 *                 </sequence>
 *                 <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="InstanceValue_isStoredIn_DataPoint" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
 *                 <sequence>
 *                   <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
 *                   <element name="validType" minOccurs="0">
 *                     <simpleType>
 *                       <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                         <enumeration value="DataPoint"/>
 *                       </restriction>
 *                     </simpleType>
 *                   </element>
 *                 </sequence>
 *                 <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="InstanceValue_represents_ConceptualValue" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
 *                 <sequence>
 *                   <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
 *                   <element name="validType" maxOccurs="unbounded">
 *                     <simpleType>
 *                       <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                         <enumeration value="ConceptualValue"/>
 *                         <enumeration value="DimensionalKeyDefinitionMember"/>
 *                         <enumeration value="KeyDefinitionMember"/>
 *                       </restriction>
 *                     </simpleType>
 *                   </element>
 *                 </sequence>
 *                 <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "InstanceValue", propOrder = {
    "content",
    "identifier",
    "whiteSpace",
    "instanceValueHasValueFromValueDomain",
    "instanceValueIsStoredInDataPoint",
    "instanceValueRepresentsConceptualValue"
})
@XmlSeeAlso({
    ReferenceValue.class,
    KeyMember.class
})
public class InstanceValue {

    protected TypedString content;
    protected Identifier identifier;
    @XmlSchemaType(name = "NMTOKEN")
    protected WhiteSpaceRule whiteSpace;
    @XmlElement(name = "InstanceValue_hasValueFrom_ValueDomain", required = true)
    protected InstanceValue.InstanceValueHasValueFromValueDomain instanceValueHasValueFromValueDomain;
    @XmlElement(name = "InstanceValue_isStoredIn_DataPoint")
    protected InstanceValue.InstanceValueIsStoredInDataPoint instanceValueIsStoredInDataPoint;
    @XmlElement(name = "InstanceValue_represents_ConceptualValue")
    protected InstanceValue.InstanceValueRepresentsConceptualValue instanceValueRepresentsConceptualValue;

    /**
     * Gets the value of the content property.
     * 
     * @return
     *     possible object is
     *     {@link TypedString }
     *     
     */
    public TypedString getContent() {
        return content;
    }

    /**
     * Sets the value of the content property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypedString }
     *     
     */
    public void setContent(TypedString value) {
        this.content = value;
    }

    /**
     * Gets the value of the identifier property.
     * 
     * @return
     *     possible object is
     *     {@link Identifier }
     *     
     */
    public Identifier getIdentifier() {
        return identifier;
    }

    /**
     * Sets the value of the identifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link Identifier }
     *     
     */
    public void setIdentifier(Identifier value) {
        this.identifier = value;
    }

    /**
     * Gets the value of the whiteSpace property.
     * 
     * @return
     *     possible object is
     *     {@link WhiteSpaceRule }
     *     
     */
    public WhiteSpaceRule getWhiteSpace() {
        return whiteSpace;
    }

    /**
     * Sets the value of the whiteSpace property.
     * 
     * @param value
     *     allowed object is
     *     {@link WhiteSpaceRule }
     *     
     */
    public void setWhiteSpace(WhiteSpaceRule value) {
        this.whiteSpace = value;
    }

    /**
     * Gets the value of the instanceValueHasValueFromValueDomain property.
     * 
     * @return
     *     possible object is
     *     {@link InstanceValue.InstanceValueHasValueFromValueDomain }
     *     
     */
    public InstanceValue.InstanceValueHasValueFromValueDomain getInstanceValueHasValueFromValueDomain() {
        return instanceValueHasValueFromValueDomain;
    }

    /**
     * Sets the value of the instanceValueHasValueFromValueDomain property.
     * 
     * @param value
     *     allowed object is
     *     {@link InstanceValue.InstanceValueHasValueFromValueDomain }
     *     
     */
    public void setInstanceValueHasValueFromValueDomain(InstanceValue.InstanceValueHasValueFromValueDomain value) {
        this.instanceValueHasValueFromValueDomain = value;
    }

    /**
     * Gets the value of the instanceValueIsStoredInDataPoint property.
     * 
     * @return
     *     possible object is
     *     {@link InstanceValue.InstanceValueIsStoredInDataPoint }
     *     
     */
    public InstanceValue.InstanceValueIsStoredInDataPoint getInstanceValueIsStoredInDataPoint() {
        return instanceValueIsStoredInDataPoint;
    }

    /**
     * Sets the value of the instanceValueIsStoredInDataPoint property.
     * 
     * @param value
     *     allowed object is
     *     {@link InstanceValue.InstanceValueIsStoredInDataPoint }
     *     
     */
    public void setInstanceValueIsStoredInDataPoint(InstanceValue.InstanceValueIsStoredInDataPoint value) {
        this.instanceValueIsStoredInDataPoint = value;
    }

    /**
     * Gets the value of the instanceValueRepresentsConceptualValue property.
     * 
     * @return
     *     possible object is
     *     {@link InstanceValue.InstanceValueRepresentsConceptualValue }
     *     
     */
    public InstanceValue.InstanceValueRepresentsConceptualValue getInstanceValueRepresentsConceptualValue() {
        return instanceValueRepresentsConceptualValue;
    }

    /**
     * Sets the value of the instanceValueRepresentsConceptualValue property.
     * 
     * @param value
     *     allowed object is
     *     {@link InstanceValue.InstanceValueRepresentsConceptualValue }
     *     
     */
    public void setInstanceValueRepresentsConceptualValue(InstanceValue.InstanceValueRepresentsConceptualValue value) {
        this.instanceValueRepresentsConceptualValue = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
     *       <sequence>
     *         <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
     *         <element name="validType" maxOccurs="unbounded" minOccurs="0">
     *           <simpleType>
     *             <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *               <enumeration value="DescriptorValueDomain"/>
     *               <enumeration value="ReferenceValueDomain"/>
     *               <enumeration value="SentinelValueDomain"/>
     *               <enumeration value="SubstantiveValueDomain"/>
     *               <enumeration value="ValueDomain"/>
     *             </restriction>
     *           </simpleType>
     *         </element>
     *       </sequence>
     *       <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class InstanceValueHasValueFromValueDomain
        extends Reference
    {


    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
     *       <sequence>
     *         <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
     *         <element name="validType" minOccurs="0">
     *           <simpleType>
     *             <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *               <enumeration value="DataPoint"/>
     *             </restriction>
     *           </simpleType>
     *         </element>
     *       </sequence>
     *       <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class InstanceValueIsStoredInDataPoint
        extends Reference
    {


    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
     *       <sequence>
     *         <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
     *         <element name="validType" maxOccurs="unbounded">
     *           <simpleType>
     *             <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *               <enumeration value="ConceptualValue"/>
     *               <enumeration value="DimensionalKeyDefinitionMember"/>
     *               <enumeration value="KeyDefinitionMember"/>
     *             </restriction>
     *           </simpleType>
     *         </element>
     *       </sequence>
     *       <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class InstanceValueRepresentsConceptualValue
        extends Reference
    {


    }

}
