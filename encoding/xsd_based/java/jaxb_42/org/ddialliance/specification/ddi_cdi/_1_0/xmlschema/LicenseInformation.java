//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ddialliance.specification.ddi_cdi._1_0.xmlschema;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Definition
 *             ============
 *             Information about any relevant license.
 *             
 *             Examples
 *             ==========
 *             Licensed under Creative Commons Attribution 2.0 Generic (CC BY 2.0).
 * 
 * <p>Java class for LicenseInformation complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="LicenseInformation">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="contact" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}ContactInformation" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="description" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalString" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="licenseAgent" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}AgentInRole" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="licenseReference" maxOccurs="unbounded" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
 *                 <sequence>
 *                   <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
 *                   <element name="deepLink" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Selector" minOccurs="0"/>
 *                   <element name="description" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   <element name="location" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalString" minOccurs="0"/>
 *                   <element name="nonDdiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}NonDdiIdentifier" maxOccurs="unbounded" minOccurs="0"/>
 *                   <element name="semantic" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}ControlledVocabularyEntry" minOccurs="0"/>
 *                   <element name="uri" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
 *                   <element name="validType" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *                 </sequence>
 *                 <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="false" />
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "LicenseInformation", propOrder = {
    "contact",
    "description",
    "licenseAgent",
    "licenseReference"
})
public class LicenseInformation {

    protected List<ContactInformation> contact;
    protected List<InternationalString> description;
    protected List<AgentInRole> licenseAgent;
    protected List<LicenseInformation.LicenseReference> licenseReference;

    /**
     * Gets the value of the contact property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the contact property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContact().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ContactInformation }
     * 
     * 
     * @return
     *     The value of the contact property.
     */
    public List<ContactInformation> getContact() {
        if (contact == null) {
            contact = new ArrayList<>();
        }
        return this.contact;
    }

    /**
     * Gets the value of the description property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the description property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDescription().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InternationalString }
     * 
     * 
     * @return
     *     The value of the description property.
     */
    public List<InternationalString> getDescription() {
        if (description == null) {
            description = new ArrayList<>();
        }
        return this.description;
    }

    /**
     * Gets the value of the licenseAgent property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the licenseAgent property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLicenseAgent().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AgentInRole }
     * 
     * 
     * @return
     *     The value of the licenseAgent property.
     */
    public List<AgentInRole> getLicenseAgent() {
        if (licenseAgent == null) {
            licenseAgent = new ArrayList<>();
        }
        return this.licenseAgent;
    }

    /**
     * Gets the value of the licenseReference property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the licenseReference property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLicenseReference().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LicenseInformation.LicenseReference }
     * 
     * 
     * @return
     *     The value of the licenseReference property.
     */
    public List<LicenseInformation.LicenseReference> getLicenseReference() {
        if (licenseReference == null) {
            licenseReference = new ArrayList<>();
        }
        return this.licenseReference;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
     *       <sequence>
     *         <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
     *         <element name="deepLink" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Selector" minOccurs="0"/>
     *         <element name="description" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         <element name="location" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalString" minOccurs="0"/>
     *         <element name="nonDdiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}NonDdiIdentifier" maxOccurs="unbounded" minOccurs="0"/>
     *         <element name="semantic" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}ControlledVocabularyEntry" minOccurs="0"/>
     *         <element name="uri" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
     *         <element name="validType" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
     *       </sequence>
     *       <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="false" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class LicenseReference
        extends Reference
    {


    }

}
