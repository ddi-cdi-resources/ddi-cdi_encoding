//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ddialliance.specification.ddi_cdi._1_0.xmlschema;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Definition 
 *             ============ 
 *             Used as an extension point in the description of the different layout styles of data structure descriptions.  
 *             
 *             Examples 
 *             ========== 
 *             Examples include unit segment layouts, event data layouts, and cube layouts (e.g. summary data).  
 *             
 *             Explanatory notes 
 *             =================== 
 *             A physical segment layout is a physical description (e.g. unit segment layout) of the associated logical record Layout consisting of a collection of value mappings describing the physical interrelationship of each related value mapping and associated instance variable.
 * 
 * <p>Java class for PhysicalSegmentLayout complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="PhysicalSegmentLayout">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="allowsDuplicates" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         <element name="arrayBase" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/>
 *         <element name="catalogDetails" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}CatalogDetails" minOccurs="0"/>
 *         <element name="commentPrefix" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         <element name="delimiter" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         <element name="encoding" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}ControlledVocabularyEntry" minOccurs="0"/>
 *         <element name="escapeCharacter" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         <element name="hasHeader" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         <element name="headerIsCaseSensitive" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         <element name="headerRowCount" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/>
 *         <element name="identifier" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Identifier" minOccurs="0"/>
 *         <element name="isDelimited" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         <element name="isFixedWidth" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         <element name="lineTerminator" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="name" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}ObjectName" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="nullSequence" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         <element name="overview" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalString" minOccurs="0"/>
 *         <element name="purpose" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalString" minOccurs="0"/>
 *         <element name="quoteCharacter" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         <element name="skipBlankRows" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         <element name="skipDataColumns" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/>
 *         <element name="skipInitialSpace" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         <element name="skipRows" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/>
 *         <element name="tableDirection" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}TableDirectionValues" minOccurs="0"/>
 *         <element name="textDirection" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}TextDirectionValues" minOccurs="0"/>
 *         <element name="treatConsecutiveDelimitersAsOne" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         <element name="trim" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}TrimValues" minOccurs="0"/>
 *         <element name="PhysicalSegmentLayout_isDefinedBy_Concept" maxOccurs="unbounded" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
 *                 <sequence>
 *                   <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
 *                   <element name="validType" maxOccurs="unbounded" minOccurs="0">
 *                     <simpleType>
 *                       <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                         <enumeration value="Category"/>
 *                         <enumeration value="Concept"/>
 *                         <enumeration value="ConceptualValue"/>
 *                         <enumeration value="ConceptualVariable"/>
 *                         <enumeration value="DescriptorVariable"/>
 *                         <enumeration value="DimensionalKeyDefinitionMember"/>
 *                         <enumeration value="InstanceVariable"/>
 *                         <enumeration value="KeyDefinitionMember"/>
 *                         <enumeration value="Population"/>
 *                         <enumeration value="ReferenceVariable"/>
 *                         <enumeration value="RepresentedVariable"/>
 *                         <enumeration value="UnitType"/>
 *                         <enumeration value="Universe"/>
 *                       </restriction>
 *                     </simpleType>
 *                   </element>
 *                 </sequence>
 *                 <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="PhysicalSegmentLayout_formats_LogicalRecord" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
 *                 <sequence>
 *                   <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
 *                   <element name="validType" maxOccurs="unbounded" minOccurs="0">
 *                     <simpleType>
 *                       <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                         <enumeration value="LogicalRecord"/>
 *                       </restriction>
 *                     </simpleType>
 *                   </element>
 *                 </sequence>
 *                 <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="PhysicalSegmentLayout_has_ValueMapping" maxOccurs="unbounded" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
 *                 <sequence>
 *                   <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
 *                   <element name="validType" maxOccurs="unbounded" minOccurs="0">
 *                     <simpleType>
 *                       <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                         <enumeration value="ValueMapping"/>
 *                       </restriction>
 *                     </simpleType>
 *                   </element>
 *                 </sequence>
 *                 <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="PhysicalSegmentLayout_has_ValueMappingPosition" maxOccurs="unbounded" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
 *                 <sequence>
 *                   <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
 *                   <element name="validType">
 *                     <simpleType>
 *                       <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                         <enumeration value="ValueMappingPosition"/>
 *                       </restriction>
 *                     </simpleType>
 *                   </element>
 *                 </sequence>
 *                 <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PhysicalSegmentLayout", propOrder = {
    "allowsDuplicates",
    "arrayBase",
    "catalogDetails",
    "commentPrefix",
    "delimiter",
    "encoding",
    "escapeCharacter",
    "hasHeader",
    "headerIsCaseSensitive",
    "headerRowCount",
    "identifier",
    "isDelimited",
    "isFixedWidth",
    "lineTerminator",
    "name",
    "nullSequence",
    "overview",
    "purpose",
    "quoteCharacter",
    "skipBlankRows",
    "skipDataColumns",
    "skipInitialSpace",
    "skipRows",
    "tableDirection",
    "textDirection",
    "treatConsecutiveDelimitersAsOne",
    "trim",
    "physicalSegmentLayoutIsDefinedByConcept",
    "physicalSegmentLayoutFormatsLogicalRecord",
    "physicalSegmentLayoutHasValueMapping",
    "physicalSegmentLayoutHasValueMappingPosition"
})
@XmlSeeAlso({
    UnitSegmentLayout.class
})
public class PhysicalSegmentLayout {

    protected boolean allowsDuplicates;
    protected BigInteger arrayBase;
    protected CatalogDetails catalogDetails;
    protected String commentPrefix;
    protected String delimiter;
    protected ControlledVocabularyEntry encoding;
    protected String escapeCharacter;
    protected Boolean hasHeader;
    protected Boolean headerIsCaseSensitive;
    protected BigInteger headerRowCount;
    protected Identifier identifier;
    protected boolean isDelimited;
    protected boolean isFixedWidth;
    protected List<String> lineTerminator;
    protected List<ObjectName> name;
    protected String nullSequence;
    protected InternationalString overview;
    protected InternationalString purpose;
    protected String quoteCharacter;
    protected Boolean skipBlankRows;
    protected BigInteger skipDataColumns;
    protected Boolean skipInitialSpace;
    protected BigInteger skipRows;
    @XmlSchemaType(name = "NMTOKEN")
    protected TableDirectionValues tableDirection;
    @XmlSchemaType(name = "NMTOKEN")
    protected TextDirectionValues textDirection;
    protected Boolean treatConsecutiveDelimitersAsOne;
    @XmlSchemaType(name = "NMTOKEN")
    protected TrimValues trim;
    @XmlElement(name = "PhysicalSegmentLayout_isDefinedBy_Concept")
    protected List<PhysicalSegmentLayout.PhysicalSegmentLayoutIsDefinedByConcept> physicalSegmentLayoutIsDefinedByConcept;
    @XmlElement(name = "PhysicalSegmentLayout_formats_LogicalRecord")
    protected PhysicalSegmentLayout.PhysicalSegmentLayoutFormatsLogicalRecord physicalSegmentLayoutFormatsLogicalRecord;
    @XmlElement(name = "PhysicalSegmentLayout_has_ValueMapping")
    protected List<PhysicalSegmentLayout.PhysicalSegmentLayoutHasValueMapping> physicalSegmentLayoutHasValueMapping;
    @XmlElement(name = "PhysicalSegmentLayout_has_ValueMappingPosition")
    protected List<PhysicalSegmentLayout.PhysicalSegmentLayoutHasValueMappingPosition> physicalSegmentLayoutHasValueMappingPosition;

    /**
     * Gets the value of the allowsDuplicates property.
     * 
     */
    public boolean isAllowsDuplicates() {
        return allowsDuplicates;
    }

    /**
     * Sets the value of the allowsDuplicates property.
     * 
     */
    public void setAllowsDuplicates(boolean value) {
        this.allowsDuplicates = value;
    }

    /**
     * Gets the value of the arrayBase property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getArrayBase() {
        return arrayBase;
    }

    /**
     * Sets the value of the arrayBase property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setArrayBase(BigInteger value) {
        this.arrayBase = value;
    }

    /**
     * Gets the value of the catalogDetails property.
     * 
     * @return
     *     possible object is
     *     {@link CatalogDetails }
     *     
     */
    public CatalogDetails getCatalogDetails() {
        return catalogDetails;
    }

    /**
     * Sets the value of the catalogDetails property.
     * 
     * @param value
     *     allowed object is
     *     {@link CatalogDetails }
     *     
     */
    public void setCatalogDetails(CatalogDetails value) {
        this.catalogDetails = value;
    }

    /**
     * Gets the value of the commentPrefix property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCommentPrefix() {
        return commentPrefix;
    }

    /**
     * Sets the value of the commentPrefix property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCommentPrefix(String value) {
        this.commentPrefix = value;
    }

    /**
     * Gets the value of the delimiter property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDelimiter() {
        return delimiter;
    }

    /**
     * Sets the value of the delimiter property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDelimiter(String value) {
        this.delimiter = value;
    }

    /**
     * Gets the value of the encoding property.
     * 
     * @return
     *     possible object is
     *     {@link ControlledVocabularyEntry }
     *     
     */
    public ControlledVocabularyEntry getEncoding() {
        return encoding;
    }

    /**
     * Sets the value of the encoding property.
     * 
     * @param value
     *     allowed object is
     *     {@link ControlledVocabularyEntry }
     *     
     */
    public void setEncoding(ControlledVocabularyEntry value) {
        this.encoding = value;
    }

    /**
     * Gets the value of the escapeCharacter property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEscapeCharacter() {
        return escapeCharacter;
    }

    /**
     * Sets the value of the escapeCharacter property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEscapeCharacter(String value) {
        this.escapeCharacter = value;
    }

    /**
     * Gets the value of the hasHeader property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isHasHeader() {
        return hasHeader;
    }

    /**
     * Sets the value of the hasHeader property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setHasHeader(Boolean value) {
        this.hasHeader = value;
    }

    /**
     * Gets the value of the headerIsCaseSensitive property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isHeaderIsCaseSensitive() {
        return headerIsCaseSensitive;
    }

    /**
     * Sets the value of the headerIsCaseSensitive property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setHeaderIsCaseSensitive(Boolean value) {
        this.headerIsCaseSensitive = value;
    }

    /**
     * Gets the value of the headerRowCount property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getHeaderRowCount() {
        return headerRowCount;
    }

    /**
     * Sets the value of the headerRowCount property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setHeaderRowCount(BigInteger value) {
        this.headerRowCount = value;
    }

    /**
     * Gets the value of the identifier property.
     * 
     * @return
     *     possible object is
     *     {@link Identifier }
     *     
     */
    public Identifier getIdentifier() {
        return identifier;
    }

    /**
     * Sets the value of the identifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link Identifier }
     *     
     */
    public void setIdentifier(Identifier value) {
        this.identifier = value;
    }

    /**
     * Gets the value of the isDelimited property.
     * 
     */
    public boolean isIsDelimited() {
        return isDelimited;
    }

    /**
     * Sets the value of the isDelimited property.
     * 
     */
    public void setIsDelimited(boolean value) {
        this.isDelimited = value;
    }

    /**
     * Gets the value of the isFixedWidth property.
     * 
     */
    public boolean isIsFixedWidth() {
        return isFixedWidth;
    }

    /**
     * Sets the value of the isFixedWidth property.
     * 
     */
    public void setIsFixedWidth(boolean value) {
        this.isFixedWidth = value;
    }

    /**
     * Gets the value of the lineTerminator property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the lineTerminator property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLineTerminator().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     * @return
     *     The value of the lineTerminator property.
     */
    public List<String> getLineTerminator() {
        if (lineTerminator == null) {
            lineTerminator = new ArrayList<>();
        }
        return this.lineTerminator;
    }

    /**
     * Gets the value of the name property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the name property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getName().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ObjectName }
     * 
     * 
     * @return
     *     The value of the name property.
     */
    public List<ObjectName> getName() {
        if (name == null) {
            name = new ArrayList<>();
        }
        return this.name;
    }

    /**
     * Gets the value of the nullSequence property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNullSequence() {
        return nullSequence;
    }

    /**
     * Sets the value of the nullSequence property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNullSequence(String value) {
        this.nullSequence = value;
    }

    /**
     * Gets the value of the overview property.
     * 
     * @return
     *     possible object is
     *     {@link InternationalString }
     *     
     */
    public InternationalString getOverview() {
        return overview;
    }

    /**
     * Sets the value of the overview property.
     * 
     * @param value
     *     allowed object is
     *     {@link InternationalString }
     *     
     */
    public void setOverview(InternationalString value) {
        this.overview = value;
    }

    /**
     * Gets the value of the purpose property.
     * 
     * @return
     *     possible object is
     *     {@link InternationalString }
     *     
     */
    public InternationalString getPurpose() {
        return purpose;
    }

    /**
     * Sets the value of the purpose property.
     * 
     * @param value
     *     allowed object is
     *     {@link InternationalString }
     *     
     */
    public void setPurpose(InternationalString value) {
        this.purpose = value;
    }

    /**
     * Gets the value of the quoteCharacter property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getQuoteCharacter() {
        return quoteCharacter;
    }

    /**
     * Sets the value of the quoteCharacter property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setQuoteCharacter(String value) {
        this.quoteCharacter = value;
    }

    /**
     * Gets the value of the skipBlankRows property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isSkipBlankRows() {
        return skipBlankRows;
    }

    /**
     * Sets the value of the skipBlankRows property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSkipBlankRows(Boolean value) {
        this.skipBlankRows = value;
    }

    /**
     * Gets the value of the skipDataColumns property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getSkipDataColumns() {
        return skipDataColumns;
    }

    /**
     * Sets the value of the skipDataColumns property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setSkipDataColumns(BigInteger value) {
        this.skipDataColumns = value;
    }

    /**
     * Gets the value of the skipInitialSpace property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isSkipInitialSpace() {
        return skipInitialSpace;
    }

    /**
     * Sets the value of the skipInitialSpace property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSkipInitialSpace(Boolean value) {
        this.skipInitialSpace = value;
    }

    /**
     * Gets the value of the skipRows property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getSkipRows() {
        return skipRows;
    }

    /**
     * Sets the value of the skipRows property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setSkipRows(BigInteger value) {
        this.skipRows = value;
    }

    /**
     * Gets the value of the tableDirection property.
     * 
     * @return
     *     possible object is
     *     {@link TableDirectionValues }
     *     
     */
    public TableDirectionValues getTableDirection() {
        return tableDirection;
    }

    /**
     * Sets the value of the tableDirection property.
     * 
     * @param value
     *     allowed object is
     *     {@link TableDirectionValues }
     *     
     */
    public void setTableDirection(TableDirectionValues value) {
        this.tableDirection = value;
    }

    /**
     * Gets the value of the textDirection property.
     * 
     * @return
     *     possible object is
     *     {@link TextDirectionValues }
     *     
     */
    public TextDirectionValues getTextDirection() {
        return textDirection;
    }

    /**
     * Sets the value of the textDirection property.
     * 
     * @param value
     *     allowed object is
     *     {@link TextDirectionValues }
     *     
     */
    public void setTextDirection(TextDirectionValues value) {
        this.textDirection = value;
    }

    /**
     * Gets the value of the treatConsecutiveDelimitersAsOne property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTreatConsecutiveDelimitersAsOne() {
        return treatConsecutiveDelimitersAsOne;
    }

    /**
     * Sets the value of the treatConsecutiveDelimitersAsOne property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setTreatConsecutiveDelimitersAsOne(Boolean value) {
        this.treatConsecutiveDelimitersAsOne = value;
    }

    /**
     * Gets the value of the trim property.
     * 
     * @return
     *     possible object is
     *     {@link TrimValues }
     *     
     */
    public TrimValues getTrim() {
        return trim;
    }

    /**
     * Sets the value of the trim property.
     * 
     * @param value
     *     allowed object is
     *     {@link TrimValues }
     *     
     */
    public void setTrim(TrimValues value) {
        this.trim = value;
    }

    /**
     * Gets the value of the physicalSegmentLayoutIsDefinedByConcept property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the physicalSegmentLayoutIsDefinedByConcept property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPhysicalSegmentLayoutIsDefinedByConcept().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PhysicalSegmentLayout.PhysicalSegmentLayoutIsDefinedByConcept }
     * 
     * 
     * @return
     *     The value of the physicalSegmentLayoutIsDefinedByConcept property.
     */
    public List<PhysicalSegmentLayout.PhysicalSegmentLayoutIsDefinedByConcept> getPhysicalSegmentLayoutIsDefinedByConcept() {
        if (physicalSegmentLayoutIsDefinedByConcept == null) {
            physicalSegmentLayoutIsDefinedByConcept = new ArrayList<>();
        }
        return this.physicalSegmentLayoutIsDefinedByConcept;
    }

    /**
     * Gets the value of the physicalSegmentLayoutFormatsLogicalRecord property.
     * 
     * @return
     *     possible object is
     *     {@link PhysicalSegmentLayout.PhysicalSegmentLayoutFormatsLogicalRecord }
     *     
     */
    public PhysicalSegmentLayout.PhysicalSegmentLayoutFormatsLogicalRecord getPhysicalSegmentLayoutFormatsLogicalRecord() {
        return physicalSegmentLayoutFormatsLogicalRecord;
    }

    /**
     * Sets the value of the physicalSegmentLayoutFormatsLogicalRecord property.
     * 
     * @param value
     *     allowed object is
     *     {@link PhysicalSegmentLayout.PhysicalSegmentLayoutFormatsLogicalRecord }
     *     
     */
    public void setPhysicalSegmentLayoutFormatsLogicalRecord(PhysicalSegmentLayout.PhysicalSegmentLayoutFormatsLogicalRecord value) {
        this.physicalSegmentLayoutFormatsLogicalRecord = value;
    }

    /**
     * Gets the value of the physicalSegmentLayoutHasValueMapping property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the physicalSegmentLayoutHasValueMapping property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPhysicalSegmentLayoutHasValueMapping().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PhysicalSegmentLayout.PhysicalSegmentLayoutHasValueMapping }
     * 
     * 
     * @return
     *     The value of the physicalSegmentLayoutHasValueMapping property.
     */
    public List<PhysicalSegmentLayout.PhysicalSegmentLayoutHasValueMapping> getPhysicalSegmentLayoutHasValueMapping() {
        if (physicalSegmentLayoutHasValueMapping == null) {
            physicalSegmentLayoutHasValueMapping = new ArrayList<>();
        }
        return this.physicalSegmentLayoutHasValueMapping;
    }

    /**
     * Gets the value of the physicalSegmentLayoutHasValueMappingPosition property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the physicalSegmentLayoutHasValueMappingPosition property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPhysicalSegmentLayoutHasValueMappingPosition().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PhysicalSegmentLayout.PhysicalSegmentLayoutHasValueMappingPosition }
     * 
     * 
     * @return
     *     The value of the physicalSegmentLayoutHasValueMappingPosition property.
     */
    public List<PhysicalSegmentLayout.PhysicalSegmentLayoutHasValueMappingPosition> getPhysicalSegmentLayoutHasValueMappingPosition() {
        if (physicalSegmentLayoutHasValueMappingPosition == null) {
            physicalSegmentLayoutHasValueMappingPosition = new ArrayList<>();
        }
        return this.physicalSegmentLayoutHasValueMappingPosition;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
     *       <sequence>
     *         <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
     *         <element name="validType" maxOccurs="unbounded" minOccurs="0">
     *           <simpleType>
     *             <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *               <enumeration value="LogicalRecord"/>
     *             </restriction>
     *           </simpleType>
     *         </element>
     *       </sequence>
     *       <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class PhysicalSegmentLayoutFormatsLogicalRecord
        extends Reference
    {


    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
     *       <sequence>
     *         <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
     *         <element name="validType" maxOccurs="unbounded" minOccurs="0">
     *           <simpleType>
     *             <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *               <enumeration value="ValueMapping"/>
     *             </restriction>
     *           </simpleType>
     *         </element>
     *       </sequence>
     *       <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class PhysicalSegmentLayoutHasValueMapping
        extends Reference
    {


    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
     *       <sequence>
     *         <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
     *         <element name="validType">
     *           <simpleType>
     *             <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *               <enumeration value="ValueMappingPosition"/>
     *             </restriction>
     *           </simpleType>
     *         </element>
     *       </sequence>
     *       <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class PhysicalSegmentLayoutHasValueMappingPosition
        extends Reference
    {


    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference">
     *       <sequence>
     *         <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
     *         <element name="validType" maxOccurs="unbounded" minOccurs="0">
     *           <simpleType>
     *             <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *               <enumeration value="Category"/>
     *               <enumeration value="Concept"/>
     *               <enumeration value="ConceptualValue"/>
     *               <enumeration value="ConceptualVariable"/>
     *               <enumeration value="DescriptorVariable"/>
     *               <enumeration value="DimensionalKeyDefinitionMember"/>
     *               <enumeration value="InstanceVariable"/>
     *               <enumeration value="KeyDefinitionMember"/>
     *               <enumeration value="Population"/>
     *               <enumeration value="ReferenceVariable"/>
     *               <enumeration value="RepresentedVariable"/>
     *               <enumeration value="UnitType"/>
     *               <enumeration value="Universe"/>
     *             </restriction>
     *           </simpleType>
     *         </element>
     *       </sequence>
     *       <attribute name="isAssociationReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class PhysicalSegmentLayoutIsDefinedByConcept
        extends Reference
    {


    }

}
