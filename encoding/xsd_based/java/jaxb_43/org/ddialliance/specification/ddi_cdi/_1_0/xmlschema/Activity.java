//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ddialliance.specification.ddi_cdi._1_0.xmlschema;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Definition 
 *             ============ 
 *             An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.  
 *             
 *             Examples 
 *             ========== 
 *             Phases and sub-processes of the Generic Statistical Business Process Model (GSBPM) are examples of activity.  
 *             
 *             Explanatory notes 
 *             =================== 
 *             An activity is invoked by control logic. It may use and/or produce information objects referenced with the entityUsed and entityProduced attributes.
 * 
 * <p>Java class for Activity complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="Activity">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="definition" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalString" minOccurs="0"/>
 *         <element name="description" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         <element name="displayLabel" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}LabelForDisplay" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="entityProduced" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="entityUsed" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="identifier" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Identifier" minOccurs="0"/>
 *         <element name="name" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}ObjectName" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="standardModelMapping" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="Activity_hasInternal_ControlLogic" maxOccurs="unbounded" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}AssociationReference">
 *                 <sequence>
 *                   <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
 *                   <element name="validType" maxOccurs="unbounded" minOccurs="0">
 *                     <simpleType>
 *                       <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                         <enumeration value="AllenIntervalAlgebra"/>
 *                         <enumeration value="ConditionalControlLogic"/>
 *                         <enumeration value="ControlLogic"/>
 *                         <enumeration value="DeterministicImperative"/>
 *                         <enumeration value="NonDeterministicDeclarative"/>
 *                         <enumeration value="RuleBasedScheduling"/>
 *                         <enumeration value="Sequence"/>
 *                         <enumeration value="TemporalConstraints"/>
 *                         <enumeration value="TemporalControlConstruct"/>
 *                       </restriction>
 *                     </simpleType>
 *                   </element>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="Activity_hasSubActivity_Activity" maxOccurs="unbounded" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}AssociationReference">
 *                 <sequence>
 *                   <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
 *                   <element name="validType" minOccurs="0">
 *                     <simpleType>
 *                       <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                         <enumeration value="Activity"/>
 *                         <enumeration value="Step"/>
 *                       </restriction>
 *                     </simpleType>
 *                   </element>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="Activity_has_Step" maxOccurs="unbounded" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}AssociationReference">
 *                 <sequence>
 *                   <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
 *                   <element name="validType" maxOccurs="unbounded" minOccurs="0">
 *                     <simpleType>
 *                       <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                         <enumeration value="Step"/>
 *                       </restriction>
 *                     </simpleType>
 *                   </element>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Activity", propOrder = {
    "definition",
    "description",
    "displayLabel",
    "entityProduced",
    "entityUsed",
    "identifier",
    "name",
    "standardModelMapping",
    "activityHasInternalControlLogic",
    "activityHasSubActivityActivity",
    "activityHasStep"
})
@XmlSeeAlso({
    Step.class
})
public class Activity {

    protected InternationalString definition;
    protected String description;
    protected List<LabelForDisplay> displayLabel;
    protected List<Reference> entityProduced;
    protected List<Reference> entityUsed;
    protected Identifier identifier;
    protected List<ObjectName> name;
    protected List<Reference> standardModelMapping;
    @XmlElement(name = "Activity_hasInternal_ControlLogic")
    protected List<Activity.ActivityHasInternalControlLogic> activityHasInternalControlLogic;
    @XmlElement(name = "Activity_hasSubActivity_Activity")
    protected List<Activity.ActivityHasSubActivityActivity> activityHasSubActivityActivity;
    @XmlElement(name = "Activity_has_Step")
    protected List<Activity.ActivityHasStep> activityHasStep;

    /**
     * Gets the value of the definition property.
     * 
     * @return
     *     possible object is
     *     {@link InternationalString }
     *     
     */
    public InternationalString getDefinition() {
        return definition;
    }

    /**
     * Sets the value of the definition property.
     * 
     * @param value
     *     allowed object is
     *     {@link InternationalString }
     *     
     */
    public void setDefinition(InternationalString value) {
        this.definition = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the displayLabel property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the displayLabel property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDisplayLabel().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LabelForDisplay }
     * 
     * 
     * @return
     *     The value of the displayLabel property.
     */
    public List<LabelForDisplay> getDisplayLabel() {
        if (displayLabel == null) {
            displayLabel = new ArrayList<>();
        }
        return this.displayLabel;
    }

    /**
     * Gets the value of the entityProduced property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the entityProduced property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEntityProduced().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Reference }
     * 
     * 
     * @return
     *     The value of the entityProduced property.
     */
    public List<Reference> getEntityProduced() {
        if (entityProduced == null) {
            entityProduced = new ArrayList<>();
        }
        return this.entityProduced;
    }

    /**
     * Gets the value of the entityUsed property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the entityUsed property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEntityUsed().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Reference }
     * 
     * 
     * @return
     *     The value of the entityUsed property.
     */
    public List<Reference> getEntityUsed() {
        if (entityUsed == null) {
            entityUsed = new ArrayList<>();
        }
        return this.entityUsed;
    }

    /**
     * Gets the value of the identifier property.
     * 
     * @return
     *     possible object is
     *     {@link Identifier }
     *     
     */
    public Identifier getIdentifier() {
        return identifier;
    }

    /**
     * Sets the value of the identifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link Identifier }
     *     
     */
    public void setIdentifier(Identifier value) {
        this.identifier = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the name property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getName().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ObjectName }
     * 
     * 
     * @return
     *     The value of the name property.
     */
    public List<ObjectName> getName() {
        if (name == null) {
            name = new ArrayList<>();
        }
        return this.name;
    }

    /**
     * Gets the value of the standardModelMapping property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the standardModelMapping property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getStandardModelMapping().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Reference }
     * 
     * 
     * @return
     *     The value of the standardModelMapping property.
     */
    public List<Reference> getStandardModelMapping() {
        if (standardModelMapping == null) {
            standardModelMapping = new ArrayList<>();
        }
        return this.standardModelMapping;
    }

    /**
     * Gets the value of the activityHasInternalControlLogic property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the activityHasInternalControlLogic property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getActivityHasInternalControlLogic().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Activity.ActivityHasInternalControlLogic }
     * 
     * 
     * @return
     *     The value of the activityHasInternalControlLogic property.
     */
    public List<Activity.ActivityHasInternalControlLogic> getActivityHasInternalControlLogic() {
        if (activityHasInternalControlLogic == null) {
            activityHasInternalControlLogic = new ArrayList<>();
        }
        return this.activityHasInternalControlLogic;
    }

    /**
     * Gets the value of the activityHasSubActivityActivity property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the activityHasSubActivityActivity property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getActivityHasSubActivityActivity().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Activity.ActivityHasSubActivityActivity }
     * 
     * 
     * @return
     *     The value of the activityHasSubActivityActivity property.
     */
    public List<Activity.ActivityHasSubActivityActivity> getActivityHasSubActivityActivity() {
        if (activityHasSubActivityActivity == null) {
            activityHasSubActivityActivity = new ArrayList<>();
        }
        return this.activityHasSubActivityActivity;
    }

    /**
     * Gets the value of the activityHasStep property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the activityHasStep property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getActivityHasStep().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Activity.ActivityHasStep }
     * 
     * 
     * @return
     *     The value of the activityHasStep property.
     */
    public List<Activity.ActivityHasStep> getActivityHasStep() {
        if (activityHasStep == null) {
            activityHasStep = new ArrayList<>();
        }
        return this.activityHasStep;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}AssociationReference">
     *       <sequence>
     *         <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
     *         <element name="validType" maxOccurs="unbounded" minOccurs="0">
     *           <simpleType>
     *             <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *               <enumeration value="AllenIntervalAlgebra"/>
     *               <enumeration value="ConditionalControlLogic"/>
     *               <enumeration value="ControlLogic"/>
     *               <enumeration value="DeterministicImperative"/>
     *               <enumeration value="NonDeterministicDeclarative"/>
     *               <enumeration value="RuleBasedScheduling"/>
     *               <enumeration value="Sequence"/>
     *               <enumeration value="TemporalConstraints"/>
     *               <enumeration value="TemporalControlConstruct"/>
     *             </restriction>
     *           </simpleType>
     *         </element>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class ActivityHasInternalControlLogic
        extends AssociationReference
    {


    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}AssociationReference">
     *       <sequence>
     *         <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
     *         <element name="validType" maxOccurs="unbounded" minOccurs="0">
     *           <simpleType>
     *             <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *               <enumeration value="Step"/>
     *             </restriction>
     *           </simpleType>
     *         </element>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class ActivityHasStep
        extends AssociationReference
    {


    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}AssociationReference">
     *       <sequence>
     *         <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
     *         <element name="validType" minOccurs="0">
     *           <simpleType>
     *             <restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
     *               <enumeration value="Activity"/>
     *               <enumeration value="Step"/>
     *             </restriction>
     *           </simpleType>
     *         </element>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class ActivityHasSubActivityActivity
        extends AssociationReference
    {


    }

}
