//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ddialliance.specification.ddi_cdi._1_0.xmlschema;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Definition
 *             ==========
 *             Use of a represented variable within a data set.  
 *             
 *             Examples
 *             ======== 
 *             1. Gender: Dan Gillman has gender <m, male>, Arofan Gregory has gender <m, male>, etc.
 *             2. Number of employees: Microsoft has 90,000 employees; IBM has 433,000 employees, etc.
 *             3. Endowment: Johns Hopkins has endowment of <3, $1,000,000 and above>, Yale has endowment of <3, $1,000,000 and above>, etc.
 *             4. A tornado near Winterset, Iowa, had a peak wind speed of 170 mph. Two instance variables of a person's height reference the same represented variable. This indicates that they are intended to: be measured with the same unit of measurement, have the same intended data type, have the same substantive value domain, use a sentinel value domain drawn from the same set of sentinel value domains, have the same sentinel (missing value) concepts, and draw their population from the same universe. In other words, the two instance variables should be comparable.
 *             
 *             Explanatory notes
 *             ================= 
 *             The instance variable class inherits all of the properties and relationships of the represented variable class and, in turn, the conceptual variable class. This means that an instance variable can be completely populated without the need to create an associated represented variable or conceptual variable. If, however, a user wishes to indicate that a particular instance variable is patterned after a particular represented variable or a particular conceptual variable that may be indicated by including a relationship to the represented variable and/or conceptual variable. Including these references is an important method of indicating that multiple instance variables have the same representation, measure the same concept, and are drawn from the same universe. If two instance variables of a person's height reference the same represented variable. This indicates that they are intended to: be measured with the same unit of measurement, have the same intended data type, have the same substantive value domain, use a sentinel value domain drawn from the same set of sentinel value domains, have the same sentinel (missing value) concepts, and draw their population from the same universe. In other words, the two instance variables should be comparable. The instance variable describes actual instances of data that have been collected.
 * 
 * <p>Java class for InstanceVariable complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="InstanceVariable">
 *   <complexContent>
 *     <extension base="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}RepresentedVariable">
 *       <sequence>
 *         <element name="physicalDataType" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}ControlledVocabularyEntry" minOccurs="0"/>
 *         <element name="platformType" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}ControlledVocabularyEntry" minOccurs="0"/>
 *         <element name="source" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference" minOccurs="0"/>
 *         <element name="variableFunction" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}ControlledVocabularyEntry" maxOccurs="unbounded" minOccurs="0"/>
 *       </sequence>
 *     </extension>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "InstanceVariable", propOrder = {
    "physicalDataType",
    "platformType",
    "source",
    "variableFunction"
})
public class InstanceVariable
    extends RepresentedVariable
{

    protected ControlledVocabularyEntry physicalDataType;
    protected ControlledVocabularyEntry platformType;
    protected Reference source;
    protected List<ControlledVocabularyEntry> variableFunction;

    /**
     * Gets the value of the physicalDataType property.
     * 
     * @return
     *     possible object is
     *     {@link ControlledVocabularyEntry }
     *     
     */
    public ControlledVocabularyEntry getPhysicalDataType() {
        return physicalDataType;
    }

    /**
     * Sets the value of the physicalDataType property.
     * 
     * @param value
     *     allowed object is
     *     {@link ControlledVocabularyEntry }
     *     
     */
    public void setPhysicalDataType(ControlledVocabularyEntry value) {
        this.physicalDataType = value;
    }

    /**
     * Gets the value of the platformType property.
     * 
     * @return
     *     possible object is
     *     {@link ControlledVocabularyEntry }
     *     
     */
    public ControlledVocabularyEntry getPlatformType() {
        return platformType;
    }

    /**
     * Sets the value of the platformType property.
     * 
     * @param value
     *     allowed object is
     *     {@link ControlledVocabularyEntry }
     *     
     */
    public void setPlatformType(ControlledVocabularyEntry value) {
        this.platformType = value;
    }

    /**
     * Gets the value of the source property.
     * 
     * @return
     *     possible object is
     *     {@link Reference }
     *     
     */
    public Reference getSource() {
        return source;
    }

    /**
     * Sets the value of the source property.
     * 
     * @param value
     *     allowed object is
     *     {@link Reference }
     *     
     */
    public void setSource(Reference value) {
        this.source = value;
    }

    /**
     * Gets the value of the variableFunction property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the variableFunction property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getVariableFunction().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ControlledVocabularyEntry }
     * 
     * 
     * @return
     *     The value of the variableFunction property.
     */
    public List<ControlledVocabularyEntry> getVariableFunction() {
        if (variableFunction == null) {
            variableFunction = new ArrayList<>();
        }
        return this.variableFunction;
    }

}
