//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ddialliance.specification.ddi_cdi._1_0.xmlschema;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Definition
 *             ==========
 *             Formal description of a set of values.  
 *             
 *             Examples
 *             ========
 *             
 *             1. The integers between 1 and 10, inclusive. The values of x satisfying the logicalExpression property: " (1 less than or equal to X less than or equalto 10) AND mod(x,10)=0" Also described with minimumValueInclusive = 1 and maximumValueInclusive = 10 (and datatype of integer).
 *             2. The upper case letters A through C and X described with the regularExpression "/[A-CX]/".
 *             3. A date-time described with the Unicode Locale Data Markup Language pattern yyyy.MM.dd G 'at' HH:mm:ss zzz.   
 *             
 *             Explanatory notes
 *             =================
 *             The value and concept description may be used to describe either a value domain or a conceptual domain. For a value domain, the value and concept description contains the details for a described" domain (as opposed to an enumerated domain). There are a number of properties which can be used for the description. The description could be just text such as: "an even number greater than zero", or a more formal logical expression like "x>0 and mod(x,2)=0". A regular expression might be useful for describing a textual domain. It could also employ a format pattern from the Unicode Locale Data Markup Language (LDML: http://www.unicode.org/reports/tr35/tr35.html). Some conceptual domains might be described with just a narrative. Others, though, might be described in much the same way as a value domain depending on the specificity of the concept. In ISO 11404 a value domain may be described either through enumeration or description, or both. This class provides the facility for that description. It may be just a text description, but a description through a logical expression is machine actionable and might, for example, be rendered as an integrity constraint. If both text and a logical expression are provided the logical expression is to be taken as the canonical description. The logical expression could conform to an expression syntax like that of the Validation and Transformation Language (VTL: https://sdmx.org/?page_id=5096) or the Structured Data Transformation Language (SDTL: https://ddialliance.org/products/sdtl/1.0).
 * 
 * <p>Java class for ValueAndConceptDescription complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="ValueAndConceptDescription">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="classificationLevel" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}CategoryRelationCode" minOccurs="0"/>
 *         <element name="description" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalString" minOccurs="0"/>
 *         <element name="formatPattern" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}ControlledVocabularyEntry" minOccurs="0"/>
 *         <element name="identifier" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Identifier" minOccurs="0"/>
 *         <element name="logicalExpression" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}ControlledVocabularyEntry" minOccurs="0"/>
 *         <element name="maximumValueExclusive" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         <element name="maximumValueInclusive" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         <element name="minimumValueExclusive" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         <element name="minimumValueInclusive" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         <element name="regularExpression" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}TypedString" minOccurs="0"/>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ValueAndConceptDescription", propOrder = {
    "classificationLevel",
    "description",
    "formatPattern",
    "identifier",
    "logicalExpression",
    "maximumValueExclusive",
    "maximumValueInclusive",
    "minimumValueExclusive",
    "minimumValueInclusive",
    "regularExpression"
})
public class ValueAndConceptDescription {

    @XmlSchemaType(name = "NMTOKEN")
    protected CategoryRelationCode classificationLevel;
    protected InternationalString description;
    protected ControlledVocabularyEntry formatPattern;
    protected Identifier identifier;
    protected ControlledVocabularyEntry logicalExpression;
    protected String maximumValueExclusive;
    protected String maximumValueInclusive;
    protected String minimumValueExclusive;
    protected String minimumValueInclusive;
    protected TypedString regularExpression;

    /**
     * Gets the value of the classificationLevel property.
     * 
     * @return
     *     possible object is
     *     {@link CategoryRelationCode }
     *     
     */
    public CategoryRelationCode getClassificationLevel() {
        return classificationLevel;
    }

    /**
     * Sets the value of the classificationLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link CategoryRelationCode }
     *     
     */
    public void setClassificationLevel(CategoryRelationCode value) {
        this.classificationLevel = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link InternationalString }
     *     
     */
    public InternationalString getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link InternationalString }
     *     
     */
    public void setDescription(InternationalString value) {
        this.description = value;
    }

    /**
     * Gets the value of the formatPattern property.
     * 
     * @return
     *     possible object is
     *     {@link ControlledVocabularyEntry }
     *     
     */
    public ControlledVocabularyEntry getFormatPattern() {
        return formatPattern;
    }

    /**
     * Sets the value of the formatPattern property.
     * 
     * @param value
     *     allowed object is
     *     {@link ControlledVocabularyEntry }
     *     
     */
    public void setFormatPattern(ControlledVocabularyEntry value) {
        this.formatPattern = value;
    }

    /**
     * Gets the value of the identifier property.
     * 
     * @return
     *     possible object is
     *     {@link Identifier }
     *     
     */
    public Identifier getIdentifier() {
        return identifier;
    }

    /**
     * Sets the value of the identifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link Identifier }
     *     
     */
    public void setIdentifier(Identifier value) {
        this.identifier = value;
    }

    /**
     * Gets the value of the logicalExpression property.
     * 
     * @return
     *     possible object is
     *     {@link ControlledVocabularyEntry }
     *     
     */
    public ControlledVocabularyEntry getLogicalExpression() {
        return logicalExpression;
    }

    /**
     * Sets the value of the logicalExpression property.
     * 
     * @param value
     *     allowed object is
     *     {@link ControlledVocabularyEntry }
     *     
     */
    public void setLogicalExpression(ControlledVocabularyEntry value) {
        this.logicalExpression = value;
    }

    /**
     * Gets the value of the maximumValueExclusive property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMaximumValueExclusive() {
        return maximumValueExclusive;
    }

    /**
     * Sets the value of the maximumValueExclusive property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMaximumValueExclusive(String value) {
        this.maximumValueExclusive = value;
    }

    /**
     * Gets the value of the maximumValueInclusive property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMaximumValueInclusive() {
        return maximumValueInclusive;
    }

    /**
     * Sets the value of the maximumValueInclusive property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMaximumValueInclusive(String value) {
        this.maximumValueInclusive = value;
    }

    /**
     * Gets the value of the minimumValueExclusive property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMinimumValueExclusive() {
        return minimumValueExclusive;
    }

    /**
     * Sets the value of the minimumValueExclusive property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMinimumValueExclusive(String value) {
        this.minimumValueExclusive = value;
    }

    /**
     * Gets the value of the minimumValueInclusive property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMinimumValueInclusive() {
        return minimumValueInclusive;
    }

    /**
     * Sets the value of the minimumValueInclusive property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMinimumValueInclusive(String value) {
        this.minimumValueInclusive = value;
    }

    /**
     * Gets the value of the regularExpression property.
     * 
     * @return
     *     possible object is
     *     {@link TypedString }
     *     
     */
    public TypedString getRegularExpression() {
        return regularExpression;
    }

    /**
     * Sets the value of the regularExpression property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypedString }
     *     
     */
    public void setRegularExpression(TypedString value) {
        this.regularExpression = value;
    }

}
