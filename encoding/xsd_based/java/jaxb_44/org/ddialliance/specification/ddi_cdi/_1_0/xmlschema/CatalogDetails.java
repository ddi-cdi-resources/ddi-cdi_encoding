//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ddialliance.specification.ddi_cdi._1_0.xmlschema;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * Definition
 *             ============
 *             A set of information useful for attribution, data discovery, and access.
 *             
 *             Examples
 *             ==========
 *             Creator, contributor, title, copyright, license information.
 * 
 * <p>Java class for CatalogDetails complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="CatalogDetails">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="access" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}AccessInformation" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="alternativeTitle" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalString" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="contributor" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}AgentInRole" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="creator" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}AgentInRole" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="date" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}CombinedDate" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="identifier" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalIdentifier" minOccurs="0"/>
 *         <element name="informationSource" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalString" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="languageOfObject" type="{http://www.w3.org/2001/XMLSchema}language" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="provenance" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}ProvenanceInformation" minOccurs="0"/>
 *         <element name="publisher" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}AgentInRole" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="relatedResource" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Reference" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="subTitle" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalString" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="summary" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalString" minOccurs="0"/>
 *         <element name="title" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalString" minOccurs="0"/>
 *         <element name="typeOfResource" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}ControlledVocabularyEntry" maxOccurs="unbounded" minOccurs="0"/>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CatalogDetails", propOrder = {
    "access",
    "alternativeTitle",
    "contributor",
    "creator",
    "date",
    "identifier",
    "informationSource",
    "languageOfObject",
    "provenance",
    "publisher",
    "relatedResource",
    "subTitle",
    "summary",
    "title",
    "typeOfResource"
})
public class CatalogDetails {

    protected List<AccessInformation> access;
    protected List<InternationalString> alternativeTitle;
    protected List<AgentInRole> contributor;
    protected List<AgentInRole> creator;
    protected List<CombinedDate> date;
    protected InternationalIdentifier identifier;
    protected List<InternationalString> informationSource;
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "language")
    protected List<String> languageOfObject;
    protected ProvenanceInformation provenance;
    protected List<AgentInRole> publisher;
    protected List<Reference> relatedResource;
    protected List<InternationalString> subTitle;
    protected InternationalString summary;
    protected InternationalString title;
    protected List<ControlledVocabularyEntry> typeOfResource;

    /**
     * Gets the value of the access property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the access property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAccess().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AccessInformation }
     * 
     * 
     * @return
     *     The value of the access property.
     */
    public List<AccessInformation> getAccess() {
        if (access == null) {
            access = new ArrayList<>();
        }
        return this.access;
    }

    /**
     * Gets the value of the alternativeTitle property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the alternativeTitle property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAlternativeTitle().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InternationalString }
     * 
     * 
     * @return
     *     The value of the alternativeTitle property.
     */
    public List<InternationalString> getAlternativeTitle() {
        if (alternativeTitle == null) {
            alternativeTitle = new ArrayList<>();
        }
        return this.alternativeTitle;
    }

    /**
     * Gets the value of the contributor property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the contributor property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContributor().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AgentInRole }
     * 
     * 
     * @return
     *     The value of the contributor property.
     */
    public List<AgentInRole> getContributor() {
        if (contributor == null) {
            contributor = new ArrayList<>();
        }
        return this.contributor;
    }

    /**
     * Gets the value of the creator property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the creator property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCreator().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AgentInRole }
     * 
     * 
     * @return
     *     The value of the creator property.
     */
    public List<AgentInRole> getCreator() {
        if (creator == null) {
            creator = new ArrayList<>();
        }
        return this.creator;
    }

    /**
     * Gets the value of the date property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the date property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDate().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CombinedDate }
     * 
     * 
     * @return
     *     The value of the date property.
     */
    public List<CombinedDate> getDate() {
        if (date == null) {
            date = new ArrayList<>();
        }
        return this.date;
    }

    /**
     * Gets the value of the identifier property.
     * 
     * @return
     *     possible object is
     *     {@link InternationalIdentifier }
     *     
     */
    public InternationalIdentifier getIdentifier() {
        return identifier;
    }

    /**
     * Sets the value of the identifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link InternationalIdentifier }
     *     
     */
    public void setIdentifier(InternationalIdentifier value) {
        this.identifier = value;
    }

    /**
     * Gets the value of the informationSource property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the informationSource property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInformationSource().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InternationalString }
     * 
     * 
     * @return
     *     The value of the informationSource property.
     */
    public List<InternationalString> getInformationSource() {
        if (informationSource == null) {
            informationSource = new ArrayList<>();
        }
        return this.informationSource;
    }

    /**
     * Gets the value of the languageOfObject property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the languageOfObject property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLanguageOfObject().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     * @return
     *     The value of the languageOfObject property.
     */
    public List<String> getLanguageOfObject() {
        if (languageOfObject == null) {
            languageOfObject = new ArrayList<>();
        }
        return this.languageOfObject;
    }

    /**
     * Gets the value of the provenance property.
     * 
     * @return
     *     possible object is
     *     {@link ProvenanceInformation }
     *     
     */
    public ProvenanceInformation getProvenance() {
        return provenance;
    }

    /**
     * Sets the value of the provenance property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProvenanceInformation }
     *     
     */
    public void setProvenance(ProvenanceInformation value) {
        this.provenance = value;
    }

    /**
     * Gets the value of the publisher property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the publisher property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPublisher().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AgentInRole }
     * 
     * 
     * @return
     *     The value of the publisher property.
     */
    public List<AgentInRole> getPublisher() {
        if (publisher == null) {
            publisher = new ArrayList<>();
        }
        return this.publisher;
    }

    /**
     * Gets the value of the relatedResource property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the relatedResource property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRelatedResource().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Reference }
     * 
     * 
     * @return
     *     The value of the relatedResource property.
     */
    public List<Reference> getRelatedResource() {
        if (relatedResource == null) {
            relatedResource = new ArrayList<>();
        }
        return this.relatedResource;
    }

    /**
     * Gets the value of the subTitle property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the subTitle property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSubTitle().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InternationalString }
     * 
     * 
     * @return
     *     The value of the subTitle property.
     */
    public List<InternationalString> getSubTitle() {
        if (subTitle == null) {
            subTitle = new ArrayList<>();
        }
        return this.subTitle;
    }

    /**
     * Gets the value of the summary property.
     * 
     * @return
     *     possible object is
     *     {@link InternationalString }
     *     
     */
    public InternationalString getSummary() {
        return summary;
    }

    /**
     * Sets the value of the summary property.
     * 
     * @param value
     *     allowed object is
     *     {@link InternationalString }
     *     
     */
    public void setSummary(InternationalString value) {
        this.summary = value;
    }

    /**
     * Gets the value of the title property.
     * 
     * @return
     *     possible object is
     *     {@link InternationalString }
     *     
     */
    public InternationalString getTitle() {
        return title;
    }

    /**
     * Sets the value of the title property.
     * 
     * @param value
     *     allowed object is
     *     {@link InternationalString }
     *     
     */
    public void setTitle(InternationalString value) {
        this.title = value;
    }

    /**
     * Gets the value of the typeOfResource property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the typeOfResource property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTypeOfResource().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ControlledVocabularyEntry }
     * 
     * 
     * @return
     *     The value of the typeOfResource property.
     */
    public List<ControlledVocabularyEntry> getTypeOfResource() {
        if (typeOfResource == null) {
            typeOfResource = new ArrayList<>();
        }
        return this.typeOfResource;
    }

}
