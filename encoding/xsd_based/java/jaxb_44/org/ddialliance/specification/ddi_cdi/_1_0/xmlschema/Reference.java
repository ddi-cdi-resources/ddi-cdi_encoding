//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ddialliance.specification.ddi_cdi._1_0.xmlschema;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Definition
 *             ============
 *             Provides a way of pointing to resources outside of the information described in the set of DDI-CDI metadata.
 * 
 * <p>Java class for Reference complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="Reference">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="ddiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalRegistrationDataIdentifier" minOccurs="0"/>
 *         <element name="deepLink" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}Selector" minOccurs="0"/>
 *         <element name="description" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         <element name="location" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}InternationalString" minOccurs="0"/>
 *         <element name="nonDdiReference" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}NonDdiIdentifier" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="semantic" type="{http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/}ControlledVocabularyEntry" minOccurs="0"/>
 *         <element name="uri" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
 *         <element name="validType" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Reference", propOrder = {
    "ddiReference",
    "deepLink",
    "description",
    "location",
    "nonDdiReference",
    "semantic",
    "uri",
    "validType"
})
@XmlSeeAlso({
    IntermediateAssociationReference.class
})
public class Reference {

    protected InternationalRegistrationDataIdentifier ddiReference;
    protected Selector deepLink;
    protected String description;
    protected InternationalString location;
    protected List<NonDdiIdentifier> nonDdiReference;
    protected ControlledVocabularyEntry semantic;
    @XmlSchemaType(name = "anyURI")
    protected String uri;
    protected List<String> validType;

    /**
     * Gets the value of the ddiReference property.
     * 
     * @return
     *     possible object is
     *     {@link InternationalRegistrationDataIdentifier }
     *     
     */
    public InternationalRegistrationDataIdentifier getDdiReference() {
        return ddiReference;
    }

    /**
     * Sets the value of the ddiReference property.
     * 
     * @param value
     *     allowed object is
     *     {@link InternationalRegistrationDataIdentifier }
     *     
     */
    public void setDdiReference(InternationalRegistrationDataIdentifier value) {
        this.ddiReference = value;
    }

    /**
     * Gets the value of the deepLink property.
     * 
     * @return
     *     possible object is
     *     {@link Selector }
     *     
     */
    public Selector getDeepLink() {
        return deepLink;
    }

    /**
     * Sets the value of the deepLink property.
     * 
     * @param value
     *     allowed object is
     *     {@link Selector }
     *     
     */
    public void setDeepLink(Selector value) {
        this.deepLink = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the location property.
     * 
     * @return
     *     possible object is
     *     {@link InternationalString }
     *     
     */
    public InternationalString getLocation() {
        return location;
    }

    /**
     * Sets the value of the location property.
     * 
     * @param value
     *     allowed object is
     *     {@link InternationalString }
     *     
     */
    public void setLocation(InternationalString value) {
        this.location = value;
    }

    /**
     * Gets the value of the nonDdiReference property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the nonDdiReference property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNonDdiReference().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NonDdiIdentifier }
     * 
     * 
     * @return
     *     The value of the nonDdiReference property.
     */
    public List<NonDdiIdentifier> getNonDdiReference() {
        if (nonDdiReference == null) {
            nonDdiReference = new ArrayList<>();
        }
        return this.nonDdiReference;
    }

    /**
     * Gets the value of the semantic property.
     * 
     * @return
     *     possible object is
     *     {@link ControlledVocabularyEntry }
     *     
     */
    public ControlledVocabularyEntry getSemantic() {
        return semantic;
    }

    /**
     * Sets the value of the semantic property.
     * 
     * @param value
     *     allowed object is
     *     {@link ControlledVocabularyEntry }
     *     
     */
    public void setSemantic(ControlledVocabularyEntry value) {
        this.semantic = value;
    }

    /**
     * Gets the value of the uri property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUri() {
        return uri;
    }

    /**
     * Sets the value of the uri property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUri(String value) {
        this.uri = value;
    }

    /**
     * Gets the value of the validType property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the validType property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getValidType().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     * @return
     *     The value of the validType property.
     */
    public List<String> getValidType() {
        if (validType == null) {
            validType = new ArrayList<>();
        }
        return this.validType;
    }

}
