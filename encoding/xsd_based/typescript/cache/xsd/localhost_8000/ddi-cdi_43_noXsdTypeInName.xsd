<?xml version="1.0" encoding="UTF-8"?>
<!--
   PLEASE DO NOT EDIT THIS CODE!
   This code was generated by the Eclipse Acceleo module UCMIS M2T on 2023-11-17 16:44:02.
   Target language is 'XML Schema' ('xsd') generated on the basis of the model 'DDICDIModels'.
-->
<!--

XML Schema generated on the basis of the UML model DDI-CDI.

Acronym:       DDI-CDI 
Title:         DDI Cross Domain Integration
Subtitle:      Release
Major version: 1
Minor version: 0
URI:           http://ddialliance.org/Specification/DDI-CDI/1.0/

-->
<xs:schema xmlns="http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/"
           xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://ddialliance.org/Specification/DDI-CDI/1.0/XMLSchema/"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified"
           version="1.0"
           vc:minVersion="1.1">
   <xs:import namespace="http://www.w3.org/XML/1998/namespace"
              schemaLocation="xml.xsd"/>
   <xs:group name="AllElementsDerivedFromClasses">
      <xs:annotation>
         <xs:documentation>This group comprehends all elements which are based on classes in the UML model.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element ref="Activity" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Agent" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="AgentListing" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="AgentPosition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="AgentRelationship" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="AgentStructure" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="AllenIntervalAlgebra" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="AttributeComponent" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="AuthorizationSource" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Category" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="CategoryPosition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="CategoryRelationStructure" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="CategoryRelationship" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="CategorySet" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="CategoryStatistic" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ClassificationFamily" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ClassificationIndex" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ClassificationIndexEntry" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ClassificationIndexEntryPosition"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="ClassificationItem" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ClassificationItemPosition"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="ClassificationItemRelationship"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="ClassificationItemStructure"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="ClassificationPosition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ClassificationSeries" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ClassificationSeriesStructure"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="Code" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="CodeList" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="CodeListStructure" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="CodePosition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="CodeRelationship" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ComponentPosition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Concept" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ConceptMap" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ConceptRelationship" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ConceptStructure" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ConceptSystem" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ConceptSystemCorrespondence"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="ConceptualDomain" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ConceptualValue" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ConceptualVariable" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ConditionalControlLogic" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ContextualComponent" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ControlLogic" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="CorrespondenceTable" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Curator" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="DataPoint" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="DataPointPosition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="DataPointRelationship" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="DataSet" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="DataStore" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="DataStructure" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="DataStructureComponent" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Datum" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Descriptor" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="DescriptorValueDomain" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="DescriptorVariable" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="DeterministicImperative" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="DimensionComponent" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="DimensionGroup" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="DimensionalDataSet" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="DimensionalDataStructure" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="DimensionalKey" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="DimensionalKeyDefinition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="DimensionalKeyDefinitionMember"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="DimensionalKeyMember" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="EnumerationDomain" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ForeignKey" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ForeignKeyComponent" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="IdentifierComponent" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Individual" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="InformationFlowDefinition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="InstanceKey" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="InstanceValue" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="InstanceVariable" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="InstanceVariableMap" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Key" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="KeyDefinition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="KeyDefinitionMember" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="KeyMember" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="KeyValueDataStore" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="KeyValueStructure" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Level" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="LevelStructure" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="LogicalRecord" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="LogicalRecordPosition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="LogicalRecordRelationStructure"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="LogicalRecordRelationship" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="LongDataSet" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="LongDataStructure" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="LongKey" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="LongMainKeyMember" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Machine" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="MainKeyMember" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="MeasureComponent" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="NonDeterministicDeclarative"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="Notation" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Organization" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Parameter" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="PhysicalDataSet" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="PhysicalDataSetStructure" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="PhysicalLayoutRelationStructure"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="PhysicalRecordSegment" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="PhysicalRecordSegmentPosition"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="PhysicalRecordSegmentRelationship"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="PhysicalRecordSegmentStructure"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="PhysicalSegmentLayout" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="PhysicalSegmentLocation" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Population" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="PrimaryKey" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="PrimaryKeyComponent" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ProcessingAgent" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ProductionEnvironment" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="QualifiedMeasure" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="RecordRelation" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ReferenceValue" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ReferenceValueDomain" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ReferenceVariable" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="RepresentedVariable" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="RevisableDatum" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Revision" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Rule" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="RuleBasedScheduling" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="RuleSet" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ScopedMeasure" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="SegmentByText" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="SentinelConceptualDomain" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="SentinelValueDomain" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Sequence" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="SequencePosition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Service" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="StatisticalClassification" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="StatisticalClassificationRelationship"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="Step" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="SubstantiveConceptualDomain"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="SubstantiveValueDomain" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="SyntheticIdComponent" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="TemporalConstraints" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="TemporalControlConstruct" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Unit" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="UnitSegmentLayout" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="UnitType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Universe" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ValueAndConceptDescription"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="ValueDomain" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ValueMapping" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ValueMappingPosition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ValueMappingRelationship" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="VariableCollection" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="VariableDescriptorComponent"
                        minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="VariablePosition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="VariableRelationship" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="VariableStructure" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="VariableValueComponent" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="WideDataSet" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="WideDataStructure" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="WideKey" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="WideKeyMember" minOccurs="0" maxOccurs="unbounded"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:element name="DDICDIModels" type="DDICDIModels" xml:id="DDICDIModels">
      <xs:annotation>
         <xs:documentation>DDI-CDI Specification
            =====================
            
            The DDI-Cross Domain Integration (DDI-CDI) specification provides a
            model for working with a wide variety of research data across many
            scientific and policy domains. It provides a level of detail which
            supports machine-actionable processing of data, both within and between
            systems, and is designed to be easily aligned with other standards.
            
            It focuses on the key elements of the data management challenges facing
            research today: an exact understanding of data in a wide variety of
            formats, coming from many different sources. Two elements are critical
            for dealing with these challenges: a flexible means of describing data
            that can reveal the connections between the same data existing in
            different formats, and a means of describing the provenance of the data
            at a detailed (but comprehensible) level: the processes which produced
            it must be transparent.
            
            DDI-CDI covers these areas in a fashion intended to make it optimally
            useful to modern systems, which often employ a variety of models, and
            comply with a range of related specifications for both functions related
            to data description and process/provenance. The model is designed to be
            easy to fit into such systems, by aligning with relevant external
            standards, and to be align-able with them into the future.
            
            The core model field-level documentation is available in the section
            :ref:`DDICDIModels::DDICDILibrary`.
            
            The corresponding Git repository can be found at
            https://bitbucket.org/ddi-alliance/ddi-cdi/.
            
            Further information on DDI-CDI is available at the
            related DDI Alliance web page https://ddialliance.org/Specification/DDI-CDI/.
            
            Purpose
            -------
            
            The DDI-CDI specification describes a model and supporting elements for
            implementing it in the areas of data description and process/provenance.
            It is not intended to supplant existing specifications for these
            purposes, but to fill in the information which such specifications often
            do not capture. For data, this is the description of a single bit of
            information – a datum – which can be used to play different roles in
            different data structures and formats. For provenance and process, this
            is the packaging of specific machine-level processes, which may be
            described in many different ways, into a structure which relates them to
            the business processes described at a level understandable to human
            users.
            
            In order to serve this purpose, the DDI-CDI specification uses a Unified
            Modeling Language (UML) formalization so that it can be mapped against
            other models within systems more easily. Several different syntax
            expressions of the model are made available to support implementation.
            
            Several important features of the specification can be highlighted, to
            show how it serves this purpose:
            
            -  Domain-independence
            
            -  Datum-Oriented Data Description
            
            -  Provenance and Process Description
            
            -  Foundational Metadata
            
            -  Interoperability, Sustainability, and Alignment with Other Standards
            
            Each of these will be addressed in more detail, and an outline of the
            specification documents is presented.
            
            Key Features of the Specification
            ---------------------------------
            
            **Domain Independence**
            
            DDI-CDI is designed to be used with research data from any domain. In
            order to do this, it is fundamentally based on the structure and other
            generic aspects of the things it describes. It does not attempt to be a
            domain model of semantics, nor a model specific to the life-cycle of a
            particular domain of science or research. (Historically, DDI has focused
            on the Social, behavioral, and Economic [SBE] sciences and some types of
            health research – to see how DDI-CDI relates to other DDI
            specifications, see below.)
            
            DDI-CDI is intended to be complimentary to (and used in combination
            with) other standards and models which focus more on domain-specific
            aspects (such as semantics and life-cycle models). Such generic elements
            such as classifications and variables are given a detailed formal
            treatment but are agnostic as to the domain. It is left to the user to
            employ whatever domain semantics are demanded by the data with which
            they are working.
            
            This feature of the specification makes it well-suited to combining data
            coming from more than one domain or system, to allow a description that
            supports systems which perform data integration, harmonization, and
            similar functions. Cross-domain data sharing is becoming increasingly
            common, and DDI-CDI is intended to provide support for this type of
            application.
            
            **Datum-Oriented Data Description**
            
            DDI-CDI embraces a form of data description which is based on its atomic
            components: individual datums. Any given datum can play different roles
            in different formatting of the same data set, depending on how it is
            processed and transformed. In order to retain the continuity of a given
            datum across different formats and throughout a series of processes,
            DDI-CDI allows it to be described playing different roles in different
            structures.
            
            DDI-CDI provides four basic types of structural description for data
            sets: wide data, long data, dimensional data, and key-value data. These
            four types (and their sub-types) provide coverage for many common data
            formats today. While not comprehensive, they cover the majority of cases
            that the developers of this specification have seen. These include many
            of the newer forms of data such as streaming data, "big" data,
            registers, and instrument data. The underlying approach is one which
            could – and may be – expanded in future. By assigning appropriate roles
            to the variables which contain the datums across each of these different
            formats, however, it is possible to understand how data passes from one
            form to another.
            
            **Provenance and Process Description**
            
            If we are to fully understand data, we also need to know how it has been
            processed and transformed. Given our ability to describe how a different
            datum can be used in different data sets, it becomes desirable to
            understand also how those data sets relate to one another in terms of
            the processes which use them. This can be understood as an important
            aspect of data provenance.
            
            There are many different ways of describing process and provenance.
            Popular models include the Business Process Modelling and Notation
            (BPMN) standard and the PROV Ontology (from W3C). There are a multitude
            of syntaxes for driving data transformation, cleaning, and analysis in
            packages such as R, SAS, Stata, MATLab, SPSS, Python, and so on. There
            are also some emerging standard models for specifically describing such
            processes (e.g., Structured Data Transformation Language
            [SDTL], https://ddialliance.org/products/sdtl/1.0, Validation and
            Transformation Language [VTL], https://sdmx.org/?page_id=5096).
            
            DDI-CDI attempts to do something which complements the use of such
            models, by connecting specific processes interpretable by machines at
            the lowest level (described in a package-specific syntax or language)
            with the higher-level flows which combine these into human-readable
            documentation of business processes. Both traditional linear
            (deterministic) processing and the newer declarative (non-deterministic)
            processing approaches are supported.
            
            **Foundational Metadata**
            
            In order to formally describe data at a detailed level, there are many
            component elements which themselves must be modelled. Concepts used for
            statistical data but also widely applicable – including categories and
            variables – are a core part of this, but the range is broad. These
            components are included in DDI-CDI as "foundational metadata."
            
            Terminology for such constructs varies widely across domains. DDI-CDI
            has attempted to provide common terms for these components, and to adopt
            common models from other standards where it seemed useful.
            
            One area which deserves particular attention is the "variable cascade" –
            a model for how data are described at different points in their
            creation, processing, and use, which is designed to optimize reuse.
            While many different models have a "variable" of some form, the one
            presented in DDI-CDI reflects the experience of working with this
            important construct in many of the specifications and standards which
            have preceded it. It is a nuanced view of how variables relate and are
            understood across different systems, and – although not simple – it is a
            powerful model which helps solve some of the commonly encountered
            problems in data description and management.
            
            **Interoperability, Sustainability, and Alignment with Other Standards**
            
            DDI-CDI is fundamentally a model which is intended to be implemented
            across a wide variety of technology platforms, and in combination with
            many other standards, models, and specifications. To support this use,
            it is formalized using a limited subset of the Unified Modelling
            Language (UML) class diagram part. The model is provided in the form of
            Canonical XMI (restricted XML Metadata Interchange) – an interchange
            format for UML models supporting the import into many different
            modelling and development tools. Further, a syntax representation is
            provided in XML Schema, so that direct implementation of the model is
            possible if needed.
            
            The platform-independence of the model makes it more easily applicable
            across a broad range of applications and helps ensure that it will be
            sustainable even as the technology landscape evolves.
            
            DDI-CDI builds on many other standard models and is aligned with them
            where appropriate. This is shown in the model itself, where
            formalizations from other models and specifications are refined,
            extended, or directly used. The specification includes a description of
            what these other standards and models are, and how they are used in DDI-CDI.
            
            Credits
            -------
            
            Members of the Cross Domain Integration (CDI) Working Group shepherded the standard into its final form and produced the final documentation. Listed in alphabetical order they are: 
            
            -  Arofan Gregory (chair)
            -  Dan Gillman
            -  Flavio Rizzolo
            -  Hilde Orten
            -  Jay Greenfield
            -  Joachim Wackerow
            -  Larry Hoyle
            -  Oliver Hopt
            -  Wendy Lee Thomas (Technical Committee contact)
            
            Over 100 people have contributed to the development of the Data Documentation Initiative Cross Domain Integration (DDI-CDI) specification. A more complete description of their contribution to the work can be found at https://bitbucket.org/ddi-alliance/ddi-cdi/src/master/CREDITS.md.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DDICDIModels" xml:id="DDICDIModelsXsdType">
      <xs:annotation>
         <xs:documentation>DDI-CDI Specification
            =====================
            
            The DDI-Cross Domain Integration (DDI-CDI) specification provides a
            model for working with a wide variety of research data across many
            scientific and policy domains. It provides a level of detail which
            supports machine-actionable processing of data, both within and between
            systems, and is designed to be easily aligned with other standards.
            
            It focuses on the key elements of the data management challenges facing
            research today: an exact understanding of data in a wide variety of
            formats, coming from many different sources. Two elements are critical
            for dealing with these challenges: a flexible means of describing data
            that can reveal the connections between the same data existing in
            different formats, and a means of describing the provenance of the data
            at a detailed (but comprehensible) level: the processes which produced
            it must be transparent.
            
            DDI-CDI covers these areas in a fashion intended to make it optimally
            useful to modern systems, which often employ a variety of models, and
            comply with a range of related specifications for both functions related
            to data description and process/provenance. The model is designed to be
            easy to fit into such systems, by aligning with relevant external
            standards, and to be align-able with them into the future.
            
            The core model field-level documentation is available in the section
            :ref:`DDICDIModels::DDICDILibrary`.
            
            The corresponding Git repository can be found at
            https://bitbucket.org/ddi-alliance/ddi-cdi/.
            
            Further information on DDI-CDI is available at the
            related DDI Alliance web page https://ddialliance.org/Specification/DDI-CDI/.
            
            Purpose
            -------
            
            The DDI-CDI specification describes a model and supporting elements for
            implementing it in the areas of data description and process/provenance.
            It is not intended to supplant existing specifications for these
            purposes, but to fill in the information which such specifications often
            do not capture. For data, this is the description of a single bit of
            information – a datum – which can be used to play different roles in
            different data structures and formats. For provenance and process, this
            is the packaging of specific machine-level processes, which may be
            described in many different ways, into a structure which relates them to
            the business processes described at a level understandable to human
            users.
            
            In order to serve this purpose, the DDI-CDI specification uses a Unified
            Modeling Language (UML) formalization so that it can be mapped against
            other models within systems more easily. Several different syntax
            expressions of the model are made available to support implementation.
            
            Several important features of the specification can be highlighted, to
            show how it serves this purpose:
            
            -  Domain-independence
            
            -  Datum-Oriented Data Description
            
            -  Provenance and Process Description
            
            -  Foundational Metadata
            
            -  Interoperability, Sustainability, and Alignment with Other Standards
            
            Each of these will be addressed in more detail, and an outline of the
            specification documents is presented.
            
            Key Features of the Specification
            ---------------------------------
            
            **Domain Independence**
            
            DDI-CDI is designed to be used with research data from any domain. In
            order to do this, it is fundamentally based on the structure and other
            generic aspects of the things it describes. It does not attempt to be a
            domain model of semantics, nor a model specific to the life-cycle of a
            particular domain of science or research. (Historically, DDI has focused
            on the Social, behavioral, and Economic [SBE] sciences and some types of
            health research – to see how DDI-CDI relates to other DDI
            specifications, see below.)
            
            DDI-CDI is intended to be complimentary to (and used in combination
            with) other standards and models which focus more on domain-specific
            aspects (such as semantics and life-cycle models). Such generic elements
            such as classifications and variables are given a detailed formal
            treatment but are agnostic as to the domain. It is left to the user to
            employ whatever domain semantics are demanded by the data with which
            they are working.
            
            This feature of the specification makes it well-suited to combining data
            coming from more than one domain or system, to allow a description that
            supports systems which perform data integration, harmonization, and
            similar functions. Cross-domain data sharing is becoming increasingly
            common, and DDI-CDI is intended to provide support for this type of
            application.
            
            **Datum-Oriented Data Description**
            
            DDI-CDI embraces a form of data description which is based on its atomic
            components: individual datums. Any given datum can play different roles
            in different formatting of the same data set, depending on how it is
            processed and transformed. In order to retain the continuity of a given
            datum across different formats and throughout a series of processes,
            DDI-CDI allows it to be described playing different roles in different
            structures.
            
            DDI-CDI provides four basic types of structural description for data
            sets: wide data, long data, dimensional data, and key-value data. These
            four types (and their sub-types) provide coverage for many common data
            formats today. While not comprehensive, they cover the majority of cases
            that the developers of this specification have seen. These include many
            of the newer forms of data such as streaming data, "big" data,
            registers, and instrument data. The underlying approach is one which
            could – and may be – expanded in future. By assigning appropriate roles
            to the variables which contain the datums across each of these different
            formats, however, it is possible to understand how data passes from one
            form to another.
            
            **Provenance and Process Description**
            
            If we are to fully understand data, we also need to know how it has been
            processed and transformed. Given our ability to describe how a different
            datum can be used in different data sets, it becomes desirable to
            understand also how those data sets relate to one another in terms of
            the processes which use them. This can be understood as an important
            aspect of data provenance.
            
            There are many different ways of describing process and provenance.
            Popular models include the Business Process Modelling and Notation
            (BPMN) standard and the PROV Ontology (from W3C). There are a multitude
            of syntaxes for driving data transformation, cleaning, and analysis in
            packages such as R, SAS, Stata, MATLab, SPSS, Python, and so on. There
            are also some emerging standard models for specifically describing such
            processes (e.g., Structured Data Transformation Language
            [SDTL], https://ddialliance.org/products/sdtl/1.0, Validation and
            Transformation Language [VTL], https://sdmx.org/?page_id=5096).
            
            DDI-CDI attempts to do something which complements the use of such
            models, by connecting specific processes interpretable by machines at
            the lowest level (described in a package-specific syntax or language)
            with the higher-level flows which combine these into human-readable
            documentation of business processes. Both traditional linear
            (deterministic) processing and the newer declarative (non-deterministic)
            processing approaches are supported.
            
            **Foundational Metadata**
            
            In order to formally describe data at a detailed level, there are many
            component elements which themselves must be modelled. Concepts used for
            statistical data but also widely applicable – including categories and
            variables – are a core part of this, but the range is broad. These
            components are included in DDI-CDI as "foundational metadata."
            
            Terminology for such constructs varies widely across domains. DDI-CDI
            has attempted to provide common terms for these components, and to adopt
            common models from other standards where it seemed useful.
            
            One area which deserves particular attention is the "variable cascade" –
            a model for how data are described at different points in their
            creation, processing, and use, which is designed to optimize reuse.
            While many different models have a "variable" of some form, the one
            presented in DDI-CDI reflects the experience of working with this
            important construct in many of the specifications and standards which
            have preceded it. It is a nuanced view of how variables relate and are
            understood across different systems, and – although not simple – it is a
            powerful model which helps solve some of the commonly encountered
            problems in data description and management.
            
            **Interoperability, Sustainability, and Alignment with Other Standards**
            
            DDI-CDI is fundamentally a model which is intended to be implemented
            across a wide variety of technology platforms, and in combination with
            many other standards, models, and specifications. To support this use,
            it is formalized using a limited subset of the Unified Modelling
            Language (UML) class diagram part. The model is provided in the form of
            Canonical XMI (restricted XML Metadata Interchange) – an interchange
            format for UML models supporting the import into many different
            modelling and development tools. Further, a syntax representation is
            provided in XML Schema, so that direct implementation of the model is
            possible if needed.
            
            The platform-independence of the model makes it more easily applicable
            across a broad range of applications and helps ensure that it will be
            sustainable even as the technology landscape evolves.
            
            DDI-CDI builds on many other standard models and is aligned with them
            where appropriate. This is shown in the model itself, where
            formalizations from other models and specifications are refined,
            extended, or directly used. The specification includes a description of
            what these other standards and models are, and how they are used in DDI-CDI.
            
            Credits
            -------
            
            Members of the Cross Domain Integration (CDI) Working Group shepherded the standard into its final form and produced the final documentation. Listed in alphabetical order they are: 
            
            -  Arofan Gregory (chair)
            -  Dan Gillman
            -  Flavio Rizzolo
            -  Hilde Orten
            -  Jay Greenfield
            -  Joachim Wackerow
            -  Larry Hoyle
            -  Oliver Hopt
            -  Wendy Lee Thomas (Technical Committee contact)
            
            Over 100 people have contributed to the development of the Data Documentation Initiative Cross Domain Integration (DDI-CDI) specification. A more complete description of their contribution to the work can be found at https://bitbucket.org/ddi-alliance/ddi-cdi/src/master/CREDITS.md.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:group ref="AllElementsDerivedFromClasses" minOccurs="1" maxOccurs="1">
      </xs:group>
         <xs:element ref="Wrapper" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="Wrapper" type="Wrapper" xml:id="Wrapper">
      <xs:annotation>
         <xs:documentation>Definition
            ==========
            Information structured according to the DDI-CDI model for a specific purpose or purposes within a system or community.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="Wrapper" xml:id="WrapperXsdType">
      <xs:annotation>
         <xs:documentation>Definition
            ==========
            Information structured according to the DDI-CDI model for a specific purpose or purposes within a system or community.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="Wrapper-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="supportingInformation"
                     type="Reference"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="Wrapper-supportingInformation">
            <xs:annotation>
               <xs:documentation>Information structured according to a non-DDI-CDI specification which is relevant to the understanding and/or processing of the content of Wrapper.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:group ref="AllElementsDerivedFromClasses" minOccurs="1" maxOccurs="1">
      </xs:group>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="Activity" type="Activity" xml:id="Activity">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Process::Activity -->
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.  
            
            Examples 
            ========== 
            Phases and sub-processes of the Generic Statistical Business Process Model (GSBPM) are examples of activity.  
            
            Explanatory notes 
            =================== 
            An activity is invoked by control logic. It may use and/or produce information objects referenced with the entityUsed and entityProduced attributes.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="Activity" xml:id="ActivityXsdType">
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.  
            
            Examples 
            ========== 
            Phases and sub-processes of the Generic Statistical Business Process Model (GSBPM) are examples of activity.  
            
            Explanatory notes 
            =================== 
            An activity is invoked by control logic. It may use and/or produce information objects referenced with the entityUsed and entityProduced attributes.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="definition"
                     type="InternationalString"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="Activity-definition">
            <xs:annotation>
               <xs:documentation>Natural language statement conveying the meaning of a concept, differentiating it from other concepts. Supports the use of multiple languages and structured text. 'externalDefinition' can't be used if 'definition' is used.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description"
                     type="xs:string"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="Activity-description">
            <xs:annotation>
               <xs:documentation>A description of the Activity in human-readable language.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="displayLabel"
                     type="LabelForDisplay"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="Activity-displayLabel">
            <xs:annotation>
               <xs:documentation>A human-readable display label for the object. Supports the use of multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="entityProduced"
                     type="Reference"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="Activity-entityProduced">
            <xs:annotation>
               <xs:documentation>The thing resulting from the activity.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="entityUsed"
                     type="Reference"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="Activity-entityUsed">
            <xs:annotation>
               <xs:documentation>A thing employed in the activity.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="Activity-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="name"
                     type="ObjectName"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="Activity-name">
            <xs:annotation>
               <xs:documentation>Human understandable name (linguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="standardModelMapping"
                     type="Reference"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="Activity-standardModelMapping">
            <xs:annotation>
               <xs:documentation>A reference to a standard process model from which the Activity is taken, such as The Generic Statistical Business Process Model (GSBPM), the Generic Longitudinal Business Process Model (GLBPM), Open Archive Information System (OAIS) model, etc. The model and step or sub-step corresponding to the Activity is noted here using the Paired External Controlled Vocabulary Entry. Enter the name of the model in "term" and the step, sub-step, or specific portion of the model in "extent".</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="Activity_hasInternal_ControlLogic"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="Activity_hasInternal_ControlLogic">
            <xs:annotation>
               <xs:documentation>An activity is embedded in the control construct which launches it.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="Activity_hasInternal_ControlLogic-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="Activity_hasInternal_ControlLogic-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="AllenIntervalAlgebra"/>
                                 <xs:enumeration value="ConditionalControlLogic"/>
                                 <xs:enumeration value="ControlLogic"/>
                                 <xs:enumeration value="DeterministicImperative"/>
                                 <xs:enumeration value="NonDeterministicDeclarative"/>
                                 <xs:enumeration value="RuleBasedScheduling"/>
                                 <xs:enumeration value="Sequence"/>
                                 <xs:enumeration value="TemporalConstraints"/>
                                 <xs:enumeration value="TemporalControlConstruct"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="Activity_hasSubActivity_Activity"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="Activity_hasSubActivity_Activity">
            <xs:annotation>
               <xs:documentation>An Activity is a container for SubActivities.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="Activity_hasSubActivity_Activity-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="Activity_hasSubActivity_Activity-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Activity"/>
                                 <xs:enumeration value="Step"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="Activity_has_Step"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="Activity_has_Step">
            <xs:annotation>
               <xs:documentation>Activities may be broken out into Steps. Steps are also a subtype of Activity.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="Activity_has_Step-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="Activity_has_Step-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Step"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="Agent" type="Agent" xml:id="Agent">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Agents::Agent -->
      <xs:annotation>
         <xs:documentation>Definition
            ==========
            Actor that performs a role in relation to a process or product.
            
            Examples
            ========
            Analyst performing edits on data, interviewer conducting an interview, a relational database management system managing data, organization publishing data on a regular basis, creator or contributor of a publication.
            
            Explanatory notes
            =================
            foaf:Agent is: An agent (eg. person, group, software or physical artifact). prov:Agent is: An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="Agent" xml:id="AgentXsdType">
      <xs:annotation>
         <xs:documentation>Definition
            ==========
            Actor that performs a role in relation to a process or product.
            
            Examples
            ========
            Analyst performing edits on data, interviewer conducting an interview, a relational database management system managing data, organization publishing data on a regular basis, creator or contributor of a publication.
            
            Explanatory notes
            =================
            foaf:Agent is: An agent (eg. person, group, software or physical artifact). prov:Agent is: An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="catalogDetails"
                     type="CatalogDetails"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="Agent-catalogDetails">
            <xs:annotation>
               <xs:documentation>Bundles the information useful for a data catalog entry. Examples would be creator, contributor, title, copyright, embargo, and license information. A set of information useful for attribution, data discovery, and access. This is information that is tied to the identity of the object. If this information changes the version of the associated object changes.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="Agent-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="image"
                     type="PrivateImage"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="Agent-image">
            <xs:annotation>
               <xs:documentation>Information regarding image associated with the agent.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="purpose"
                     type="InternationalString"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="Agent-purpose">
            <xs:annotation>
               <xs:documentation>Intent or reason for the object/the description of the object.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="AgentListing" type="AgentListing" xml:id="AgentListing">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Agents::AgentListing -->
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Listing of agents of any type who may be organized to describe relationships between agents.  
            
            Examples 
            ========== 
            Organizations contributing to a project. Individuals within an agency. All organizations, individuals, and machines identified within the collections of an archive. A listing of organizations contributing to a network for the purposes of providing data.
            
            Explanatory notes 
            =================== 
            Relationships between agents are fluid and reflect effective dates of the relationship. An agent may have multiple relationships which may be sequential or concurrent. Relationships may or may not be hierarchical in nature. All Agents are serialized individually and brought into relationships as appropriate.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="AgentListing" xml:id="AgentListingXsdType">
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Listing of agents of any type who may be organized to describe relationships between agents.  
            
            Examples 
            ========== 
            Organizations contributing to a project. Individuals within an agency. All organizations, individuals, and machines identified within the collections of an archive. A listing of organizations contributing to a network for the purposes of providing data.
            
            Explanatory notes 
            =================== 
            Relationships between agents are fluid and reflect effective dates of the relationship. An agent may have multiple relationships which may be sequential or concurrent. Relationships may or may not be hierarchical in nature. All Agents are serialized individually and brought into relationships as appropriate.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="allowsDuplicates"
                     type="xs:boolean"
                     minOccurs="1"
                     maxOccurs="1"
                     xml:id="AgentListing-allowsDuplicates">
            <xs:annotation>
               <xs:documentation>If value is False, the members are unique within the collection - if True, there may be duplicates. (Note that a mathematical "bag" permits duplicates and is unordered - a "set" does not have duplicates and may be ordered.)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AgentListing-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="name"
                     type="ObjectName"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="AgentListing-name">
            <xs:annotation>
               <xs:documentation>Human understandable name (liguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="purpose"
                     type="InternationalString"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AgentListing-purpose">
            <xs:annotation>
               <xs:documentation>Intent or reason for the object/the description of the object.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="AgentListing_isDefinedBy_Concept"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="AgentListing_isDefinedBy_Concept">
            <xs:annotation>
               <xs:documentation>The conceptual basis for the collection of members.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="AgentListing_isDefinedBy_Concept-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="AgentListing_isDefinedBy_Concept-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Category"/>
                                 <xs:enumeration value="Concept"/>
                                 <xs:enumeration value="ConceptualValue"/>
                                 <xs:enumeration value="ConceptualVariable"/>
                                 <xs:enumeration value="DescriptorVariable"/>
                                 <xs:enumeration value="DimensionalKeyDefinitionMember"/>
                                 <xs:enumeration value="InstanceVariable"/>
                                 <xs:enumeration value="KeyDefinitionMember"/>
                                 <xs:enumeration value="Population"/>
                                 <xs:enumeration value="ReferenceVariable"/>
                                 <xs:enumeration value="RepresentedVariable"/>
                                 <xs:enumeration value="UnitType"/>
                                 <xs:enumeration value="Universe"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="AgentListing_isMaintainedBy_Agent"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AgentListing_isMaintainedBy_Agent">
            <xs:annotation>
               <xs:documentation>The unit or group of persons within the organization responsible for the agent listing (i.e., for adding, changing or deleting agent entries).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="AgentListing_isMaintainedBy_Agent-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="AgentListing_isMaintainedBy_Agent-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Agent"/>
                                 <xs:enumeration value="Curator"/>
                                 <xs:enumeration value="Individual"/>
                                 <xs:enumeration value="Machine"/>
                                 <xs:enumeration value="Organization"/>
                                 <xs:enumeration value="ProcessingAgent"/>
                                 <xs:enumeration value="Service"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="AgentListing_has_AgentPosition"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="AgentListing_has_AgentPosition">
            <xs:annotation>
               <xs:documentation/>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="AgentListing_has_AgentPosition-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="1"
                                    maxOccurs="1"
                                    xml:id="AgentListing_has_AgentPosition-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="AgentPosition"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="AgentListing_has_Agent"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="AgentListing_has_Agent">
            <xs:annotation>
               <xs:documentation/>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="AgentListing_has_Agent-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="AgentListing_has_Agent-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Agent"/>
                                 <xs:enumeration value="Curator"/>
                                 <xs:enumeration value="Individual"/>
                                 <xs:enumeration value="Machine"/>
                                 <xs:enumeration value="Organization"/>
                                 <xs:enumeration value="ProcessingAgent"/>
                                 <xs:enumeration value="Service"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="AgentPosition" type="AgentPosition" xml:id="AgentPosition">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Agents::AgentPosition -->
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Assigns a sequence number to an agent in an agent listing.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="AgentPosition" xml:id="AgentPositionXsdType">
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Assigns a sequence number to an agent in an agent listing.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AgentPosition-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="value"
                     type="xs:integer"
                     minOccurs="1"
                     maxOccurs="1"
                     xml:id="AgentPosition-value">
            <xs:annotation>
               <xs:documentation>The index of the agent within an agent listing.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="AgentPosition_indexes_Agent"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AgentPosition_indexes_Agent">
            <xs:annotation>
               <xs:documentation/>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="AgentPosition_indexes_Agent-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="AgentPosition_indexes_Agent-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Agent"/>
                                 <xs:enumeration value="Curator"/>
                                 <xs:enumeration value="Individual"/>
                                 <xs:enumeration value="Machine"/>
                                 <xs:enumeration value="Organization"/>
                                 <xs:enumeration value="ProcessingAgent"/>
                                 <xs:enumeration value="Service"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="AgentRelationship"
               type="AgentRelationship"
               xml:id="AgentRelationship">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Agents::AgentRelationship -->
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Defines the relation of an agent within a structure.  
            
            Examples 
            ========== 
            An organization (source/parent) employing an individual (target/child); An individual (source/parent) supervisory to an individual (target/child); An organization (source/parent) overseeing a project (organization) (target/child). Select appropriate relationship using the controlled vocabulary available through the semantics attribute.   
            
            Explanatory notes 
            =================== 
            Used to define the relations of agents in a hierarchical structure, or in other networks. Projects can be understood as temporary organizations.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="AgentRelationship" xml:id="AgentRelationshipXsdType">
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Defines the relation of an agent within a structure.  
            
            Examples 
            ========== 
            An organization (source/parent) employing an individual (target/child); An individual (source/parent) supervisory to an individual (target/child); An organization (source/parent) overseeing a project (organization) (target/child). Select appropriate relationship using the controlled vocabulary available through the semantics attribute.   
            
            Explanatory notes 
            =================== 
            Used to define the relations of agents in a hierarchical structure, or in other networks. Projects can be understood as temporary organizations.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="effectiveDates"
                     type="DateRange"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AgentRelationship-effectiveDates">
            <xs:annotation>
               <xs:documentation>Effective dates of the relationship expressed as a start and end Date (using ISO and/or non-ISO date structures).</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AgentRelationship-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="semantics"
                     type="ControlledVocabularyEntry"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AgentRelationship-semantics">
            <xs:annotation>
               <xs:documentation>Specifies the semantics of the object in reference to a vocabulary, ontology, etc.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="AgentRelationship_hasSource_Agent"
                     minOccurs="1"
                     maxOccurs="1"
                     xml:id="AgentRelationship_hasSource_Agent">
            <xs:annotation>
               <xs:documentation>The subject in the description of a paired relationship – for example the Parent agent in the hierarchical Parent of Child relationship.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="AgentRelationship_hasSource_Agent-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="AgentRelationship_hasSource_Agent-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Agent"/>
                                 <xs:enumeration value="Curator"/>
                                 <xs:enumeration value="Individual"/>
                                 <xs:enumeration value="Machine"/>
                                 <xs:enumeration value="Organization"/>
                                 <xs:enumeration value="ProcessingAgent"/>
                                 <xs:enumeration value="Service"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="AgentRelationship_hasTarget_Agent"
                     minOccurs="1"
                     maxOccurs="1"
                     xml:id="AgentRelationship_hasTarget_Agent">
            <xs:annotation>
               <xs:documentation>The object in the description of a paired relationship – for example the Object agent in the hierarchical Parent of Child relationship.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="AgentRelationship_hasTarget_Agent-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="AgentRelationship_hasTarget_Agent-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Agent"/>
                                 <xs:enumeration value="Curator"/>
                                 <xs:enumeration value="Individual"/>
                                 <xs:enumeration value="Machine"/>
                                 <xs:enumeration value="Organization"/>
                                 <xs:enumeration value="ProcessingAgent"/>
                                 <xs:enumeration value="Service"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="AgentStructure" type="AgentStructure" xml:id="AgentStructure">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Agents::AgentStructure -->
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Defines the relationships between agents in a collection for a specified period and purpose.  
            
            Examples 
            ========== 
            Individual employed by an organization. A unit or project (organization) within another organization. Individual supervised by another individual.  
            
            Explanatory notes 
            =================== 
            Can describe relations between agents rather than roles within a project or in relationship to a product. Roles are defined by the parent class and relationship name that uses an agent as a target.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="AgentStructure" xml:id="AgentStructureXsdType">
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Defines the relationships between agents in a collection for a specified period and purpose.  
            
            Examples 
            ========== 
            Individual employed by an organization. A unit or project (organization) within another organization. Individual supervised by another individual.  
            
            Explanatory notes 
            =================== 
            Can describe relations between agents rather than roles within a project or in relationship to a product. Roles are defined by the parent class and relationship name that uses an agent as a target.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="effectiveDates"
                     type="DateRange"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AgentStructure-effectiveDates">
            <xs:annotation>
               <xs:documentation>The effective start and end date of the relationship.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AgentStructure-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="name"
                     type="ObjectName"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="AgentStructure-name">
            <xs:annotation>
               <xs:documentation>Human understandable name (liguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="privacy"
                     type="ControlledVocabularyEntry"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AgentStructure-privacy">
            <xs:annotation>
               <xs:documentation>Level of privacy regarding this relationship.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="purpose"
                     type="InternationalString"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AgentStructure-purpose">
            <xs:annotation>
               <xs:documentation>Intent or reason for the object/the description of the object.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="semantics"
                     type="ControlledVocabularyEntry"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AgentStructure-semantics">
            <xs:annotation>
               <xs:documentation>Specifies the semantics of the object in reference to a vocabulary, ontology, etc.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="specification"
                     type="StructureSpecification"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AgentStructure-specification">
            <xs:annotation>
               <xs:documentation>Provides information on reflexivity, transitivity, and symmetry of relationship using a descriptive term from an enumerated list. Use if all relations within this relation structure are of the same specification.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="topology"
                     type="ControlledVocabularyEntry"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AgentStructure-topology">
            <xs:annotation>
               <xs:documentation>Indicates the form of the associations among members of the collection. Specifies the way in which constituent parts are interrelated or arranged.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="totality"
                     type="StructureExtent"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AgentStructure-totality">
            <xs:annotation>
               <xs:documentation>Indicates whether the related collections are comprehensive in terms of their coverage.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="AgentStructure_structures_AgentListing"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AgentStructure_structures_AgentListing">
            <xs:annotation>
               <xs:documentation/>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="AgentStructure_structures_AgentListing-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="AgentStructure_structures_AgentListing-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="AgentListing"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="AgentStructure_has_AgentRelationship"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="AgentStructure_has_AgentRelationship">
            <xs:annotation>
               <xs:documentation/>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="AgentStructure_has_AgentRelationship-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="1"
                                    maxOccurs="1"
                                    xml:id="AgentStructure_has_AgentRelationship-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="AgentRelationship"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="AllenIntervalAlgebra"
               type="AllenIntervalAlgebra"
               xml:id="AllenIntervalAlgebra">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra -->
      <xs:annotation>
         <xs:documentation>Definition 
            ==========
            Control logic where the execution flow is determined by the satisfaction of temporal constraints specified with Allen's Interval Algebra over time intervals. Allen's interval algebra consists of thirteen temporal interval relations and the operations defined on them. Together these relations are distinct (any pair of definite intervals are described by one and only one of the relations), exhaustive (any pair of definite intervals are described by one of the relations), and qualitative (no numeric time spans are considered). See https://www.ics.uci.edu/~alspaugh/cls/shr/allen.html.
            
            Examples
            ========
            An Allen overlap indicates that within a sequence two procedures overlap in time. 
            
            Explanatory notes
            =================
            Allen's intervals are pairwise.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="AllenIntervalAlgebra" xml:id="AllenIntervalAlgebraXsdType">
      <xs:annotation>
         <xs:documentation>Definition 
            ==========
            Control logic where the execution flow is determined by the satisfaction of temporal constraints specified with Allen's Interval Algebra over time intervals. Allen's interval algebra consists of thirteen temporal interval relations and the operations defined on them. Together these relations are distinct (any pair of definite intervals are described by one and only one of the relations), exhaustive (any pair of definite intervals are described by one of the relations), and qualitative (no numeric time spans are considered). See https://www.ics.uci.edu/~alspaugh/cls/shr/allen.html.
            
            Examples
            ========
            An Allen overlap indicates that within a sequence two procedures overlap in time. 
            
            Explanatory notes
            =================
            Allen's intervals are pairwise.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="TemporalConstraints">
            <xs:sequence>
               <xs:element name="temporalIntervalRelation"
                           type="TemporalRelation"
                           minOccurs="1"
                           maxOccurs="1"
                           xml:id="AllenIntervalAlgebra-temporalIntervalRelation">
                  <xs:annotation>
                     <xs:documentation>Temporal constraint specified as an Allen's interval relation.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="AttributeComponent"
               type="AttributeComponent"
               xml:id="AttributeComponent">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Components::AttributeComponent -->
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Role given to a represented variable in the context of a data structure to qualify observations or provide other types of supplementary information.  
            
            Examples 
            ========== 
            The publication status of an observation (e.g. provisional, final, revised).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="AttributeComponent" xml:id="AttributeComponentXsdType">
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Role given to a represented variable in the context of a data structure to qualify observations or provide other types of supplementary information.  
            
            Examples 
            ========== 
            The publication status of an observation (e.g. provisional, final, revised).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="DataStructureComponent">
            <xs:sequence>
               <xs:element name="AttributeComponent_qualifies_DataStructureComponent"
                           minOccurs="0"
                           maxOccurs="unbounded"
                           xml:id="AttributeComponent_qualifies_DataStructureComponent">
                  <xs:annotation>
                     <xs:documentation/>
                  </xs:annotation>
                  <xs:complexType>
                     <xs:complexContent>
                        <xs:restriction base="AssociationReference">
                           <xs:sequence>
                              <xs:element name="ddiReference"
                                          type="InternationalRegistrationDataIdentifier"
                                          minOccurs="0"
                                          maxOccurs="1"
                                          xml:id="AttributeComponent_qualifies_DataStructureComponent-ddiReference"/>
                              <xs:element name="validType"
                                          minOccurs="0"
                                          maxOccurs="unbounded"
                                          xml:id="AttributeComponent_qualifies_DataStructureComponent-validType">
                                 <xs:simpleType>
                                    <xs:restriction base="xs:NMTOKEN">
                                       <xs:enumeration value="AttributeComponent"/>
                                       <xs:enumeration value="ContextualComponent"/>
                                       <xs:enumeration value="DataStructure"/>
                                       <xs:enumeration value="DataStructureComponent"/>
                                       <xs:enumeration value="DimensionComponent"/>
                                       <xs:enumeration value="DimensionalDataStructure"/>
                                       <xs:enumeration value="IdentifierComponent"/>
                                       <xs:enumeration value="KeyValueStructure"/>
                                       <xs:enumeration value="LongDataStructure"/>
                                       <xs:enumeration value="MeasureComponent"/>
                                       <xs:enumeration value="QualifiedMeasure"/>
                                       <xs:enumeration value="SyntheticIdComponent"/>
                                       <xs:enumeration value="VariableDescriptorComponent"/>
                                       <xs:enumeration value="VariableValueComponent"/>
                                       <xs:enumeration value="WideDataStructure"/>
                                    </xs:restriction>
                                 </xs:simpleType>
                              </xs:element>
                           </xs:sequence>
                        </xs:restriction>
                     </xs:complexContent>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="AuthorizationSource"
               type="AuthorizationSource"
               xml:id="AuthorizationSource">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Representations::AuthorizationSource -->
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Identifies the authorizing agency and allows for the full text of the authorization (law, regulation, or other form of authorization).  
            
            Examples 
            ========== 
            May be used to list authorizations from oversight committees and other regulatory agencies.  
            
            Explanatory notes 
            =================== 
            Supports requirements for some statistical offices to identify the agency or law authorizing the collection or management of data or metadata.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="AuthorizationSource" xml:id="AuthorizationSourceXsdType">
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Identifies the authorizing agency and allows for the full text of the authorization (law, regulation, or other form of authorization).  
            
            Examples 
            ========== 
            May be used to list authorizations from oversight committees and other regulatory agencies.  
            
            Explanatory notes 
            =================== 
            Supports requirements for some statistical offices to identify the agency or law authorizing the collection or management of data or metadata.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="authorizationDate"
                     type="CombinedDate"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AuthorizationSource-authorizationDate">
            <xs:annotation>
               <xs:documentation>Identifies the date of authorization.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="catalogDetails"
                     type="CatalogDetails"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AuthorizationSource-catalogDetails">
            <xs:annotation>
               <xs:documentation>Bundles the information useful for a data catalog entry. 
    
    Examples would be creator, contributor, title, copyright, embargo, and license information
    
    A set of information useful for attribution, data discovery, and access.
    This is information that is tied to the identity of the object. If this information changes the version of the associated object changes.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AuthorizationSource-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="legalMandate"
                     type="InternationalString"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AuthorizationSource-legalMandate">
            <xs:annotation>
               <xs:documentation>Provide a legal citation to a law authorizing the study/data collection. For example, a legal citation for a law authorizing a country's census.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="purpose"
                     type="InternationalString"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AuthorizationSource-purpose">
            <xs:annotation>
               <xs:documentation>Intent or reason for the object/the description of the object.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="statementOfAuthorization"
                     type="InternationalString"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="AuthorizationSource-statementOfAuthorization">
            <xs:annotation>
               <xs:documentation>Text of the authorization (law, mandate, approved business case).</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="AuthorizationSource_has_Agent"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="AuthorizationSource_has_Agent">
            <xs:annotation>
               <xs:documentation/>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="AuthorizationSource_has_Agent-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="AuthorizationSource_has_Agent-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Agent"/>
                                 <xs:enumeration value="Curator"/>
                                 <xs:enumeration value="Individual"/>
                                 <xs:enumeration value="Machine"/>
                                 <xs:enumeration value="Organization"/>
                                 <xs:enumeration value="ProcessingAgent"/>
                                 <xs:enumeration value="Service"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="Category" type="Category" xml:id="Category">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::Category -->
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Concept whose role is to define and measure a characteristic.  
            
            Examples 
            ========== 
            The category "Male" is used to define or measure "Sex" or "Gender", which are characteristics. In turn, they are also variables. "Extremely Satisfied" is a category in an agreement scale. This can be used for many kinds of variables.  
            
            
            Explanatory notes 
            =================== 
            A category is a concept, typically associated with a code in the representation of a variable value. Categories are most often used in the allowed values for qualitative, i.e., nominal and ordinal, variables. A set of categories, say "Male" and "Female" for characteristics "Sex" or "Gender," helps define those characteristics. For describing location of measurement station, you might have categories "Urban", "Suburban", "Rural", etc.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="Category" xml:id="CategoryXsdType">
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Concept whose role is to define and measure a characteristic.  
            
            Examples 
            ========== 
            The category "Male" is used to define or measure "Sex" or "Gender", which are characteristics. In turn, they are also variables. "Extremely Satisfied" is a category in an agreement scale. This can be used for many kinds of variables.  
            
            
            Explanatory notes 
            =================== 
            A category is a concept, typically associated with a code in the representation of a variable value. Categories are most often used in the allowed values for qualitative, i.e., nominal and ordinal, variables. A set of categories, say "Male" and "Female" for characteristics "Sex" or "Gender," helps define those characteristics. For describing location of measurement station, you might have categories "Urban", "Suburban", "Rural", etc.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="Concept">
            <xs:sequence>
               <xs:element name="descriptiveText"
                           type="InternationalString"
                           minOccurs="0"
                           maxOccurs="1"
                           xml:id="Category-descriptiveText">
                  <xs:annotation>
                     <xs:documentation>A short natural language account of the characteristics of the object.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="CategoryPosition"
               type="CategoryPosition"
               xml:id="CategoryPosition">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::CategoryPosition -->
      <xs:annotation>
         <xs:documentation>Definition
            ============
            Assigns a sequence number to a category within a list.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CategoryPosition" xml:id="CategoryPositionXsdType">
      <xs:annotation>
         <xs:documentation>Definition
            ============
            Assigns a sequence number to a category within a list.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="CategoryPosition-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="value"
                     type="xs:integer"
                     minOccurs="1"
                     maxOccurs="1"
                     xml:id="CategoryPosition-value">
            <xs:annotation>
               <xs:documentation>Index value of the member in an ordered array.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="CategoryPosition_indexes_Category"
                     minOccurs="1"
                     maxOccurs="1"
                     xml:id="CategoryPosition_indexes_Category">
            <xs:annotation>
               <xs:documentation/>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="CategoryPosition_indexes_Category-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="CategoryPosition_indexes_Category-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Category"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="CategoryRelationStructure"
               type="CategoryRelationStructure"
               xml:id="CategoryRelationStructure">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::CategoryRelationStructure -->
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Description of the relationships between and among categories within a collection.  
            
            Examples 
            ========== 
            The category of "student" might be described as having sub-types of "primary school student" and "high school student".  
            
            
            Explanatory notes 
            =================== 
            The category relation structure employs a set of category relations to describe the relationship among concepts. Each category relation is a one to many description of connections between categories. Together they might commonly describe relationships as complex as a hierarchy or graph. This is a kind of a concept structure restricted to categories (which are concepts). Allows for the specification of complex relationships among categories.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CategoryRelationStructure"
                   xml:id="CategoryRelationStructureXsdType">
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Description of the relationships between and among categories within a collection.  
            
            Examples 
            ========== 
            The category of "student" might be described as having sub-types of "primary school student" and "high school student".  
            
            
            Explanatory notes 
            =================== 
            The category relation structure employs a set of category relations to describe the relationship among concepts. Each category relation is a one to many description of connections between categories. Together they might commonly describe relationships as complex as a hierarchy or graph. This is a kind of a concept structure restricted to categories (which are concepts). Allows for the specification of complex relationships among categories.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="CategoryRelationStructure-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="name"
                     type="ObjectName"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="CategoryRelationStructure-name">
            <xs:annotation>
               <xs:documentation>Human understandable name (liguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="purpose"
                     type="InternationalString"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="CategoryRelationStructure-purpose">
            <xs:annotation>
               <xs:documentation>Intent or reason for the object/the description of the object.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="semantics"
                     type="ControlledVocabularyEntry"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="CategoryRelationStructure-semantics">
            <xs:annotation>
               <xs:documentation>Specifies the semantics of the object in reference to a vocabulary, ontology, etc.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="specification"
                     type="StructureSpecification"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="CategoryRelationStructure-specification">
            <xs:annotation>
               <xs:documentation>Provides information on reflexivity, transitivity, and symmetry of relationship using a descriptive term from an enumerated list. Use if all relations within this relation structure are of the same specification.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="topology"
                     type="ControlledVocabularyEntry"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="CategoryRelationStructure-topology">
            <xs:annotation>
               <xs:documentation>Indicates the form of the associations among members of the collection. Specifies the way in which constituent parts are interrelated or arranged.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="totality"
                     type="StructureExtent"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="CategoryRelationStructure-totality">
            <xs:annotation>
               <xs:documentation>Indicates whether the related collections are comprehensive in terms of their coverage.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="CategoryRelationStructure_structures_CategorySet"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="CategoryRelationStructure_structures_CategorySet">
            <xs:annotation>
               <xs:documentation/>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="CategoryRelationStructure_structures_CategorySet-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="CategoryRelationStructure_structures_CategorySet-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="CategorySet"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="CategoryRelationStructure_has_CategoryRelationship"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="CategoryRelationStructure_has_CategoryRelationship">
            <xs:annotation>
               <xs:documentation/>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="CategoryRelationStructure_has_CategoryRelationship-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="1"
                                    maxOccurs="1"
                                    xml:id="CategoryRelationStructure_has_CategoryRelationship-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="CategoryRelationship"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="CategoryRelationship"
               type="CategoryRelationship"
               xml:id="CategoryRelationship">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::CategoryRelationship -->
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Source-to-target relationship between categories in a structure.   
            
            Examples 
            ========== 
            In the International Standard Industrial Classification of All Economic Activities (ISIC) Revision 4 (https://unstats.un.org/unsd/demographic-social/census/documents/isic_rev4.pdf), the super-type/sub-type relation is used throughout. The super-type "Manufacturing Sector" has among its sub-types "Manufacture of Rubber and Plastics Products" (division 22). In this example, the super-type is the source (Manufacturing Sector") and the sub-type is the target. The semantics attribute will provide the type of the relationship.
            
            Explanatory notes 
            =================== 
            Relationships between pairs of categories are linkages between them. The meaning of the linkage is determined by the relation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CategoryRelationship" xml:id="CategoryRelationshipXsdType">
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Source-to-target relationship between categories in a structure.   
            
            Examples 
            ========== 
            In the International Standard Industrial Classification of All Economic Activities (ISIC) Revision 4 (https://unstats.un.org/unsd/demographic-social/census/documents/isic_rev4.pdf), the super-type/sub-type relation is used throughout. The super-type "Manufacturing Sector" has among its sub-types "Manufacture of Rubber and Plastics Products" (division 22). In this example, the super-type is the source (Manufacturing Sector") and the sub-type is the target. The semantics attribute will provide the type of the relationship.
            
            Explanatory notes 
            =================== 
            Relationships between pairs of categories are linkages between them. The meaning of the linkage is determined by the relation.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="CategoryRelationship-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="semantics"
                     type="ControlledVocabularyEntry"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="CategoryRelationship-semantics">
            <xs:annotation>
               <xs:documentation>Specifies the semantics of the object in reference to a vocabulary, ontology, etc.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="CategoryRelationship_hasSource_Category"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="CategoryRelationship_hasSource_Category">
            <xs:annotation>
               <xs:documentation/>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="CategoryRelationship_hasSource_Category-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="CategoryRelationship_hasSource_Category-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Category"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="CategoryRelationship_hasTarget_Category"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="CategoryRelationship_hasTarget_Category">
            <xs:annotation>
               <xs:documentation>Second member in a relationship. Note that this can be realized as a collection to support tuples.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="CategoryRelationship_hasTarget_Category-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="CategoryRelationship_hasTarget_Category-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Category"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="CategorySet" type="CategorySet" xml:id="CategorySet">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::CategorySet -->
      <xs:annotation>
         <xs:documentation>Definition
            ============
            Concept system where the underlying concepts are categories.
            
            Examples
            ==========
            "Male" and "Female" categories in a category set named "Gender".
            
            Explanatory notes
            ===================
            The categories in a category set help define the meaning of the category set. Gender can be defined as "male or female" - see example above. A category set can be used directly by questions to express a set of response choices.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CategorySet" xml:id="CategorySetXsdType">
      <xs:annotation>
         <xs:documentation>Definition
            ============
            Concept system where the underlying concepts are categories.
            
            Examples
            ==========
            "Male" and "Female" categories in a category set named "Gender".
            
            Explanatory notes
            ===================
            The categories in a category set help define the meaning of the category set. Gender can be defined as "male or female" - see example above. A category set can be used directly by questions to express a set of response choices.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="ConceptSystem">
            <xs:sequence>
               <xs:element name="CategorySet_has_Category"
                           minOccurs="0"
                           maxOccurs="unbounded"
                           xml:id="CategorySet_has_Category">
                  <xs:annotation>
                     <xs:documentation/>
                  </xs:annotation>
                  <xs:complexType>
                     <xs:complexContent>
                        <xs:restriction base="AssociationReference">
                           <xs:sequence>
                              <xs:element name="ddiReference"
                                          type="InternationalRegistrationDataIdentifier"
                                          minOccurs="0"
                                          maxOccurs="1"
                                          xml:id="CategorySet_has_Category-ddiReference"/>
                              <xs:element name="validType"
                                          minOccurs="0"
                                          maxOccurs="unbounded"
                                          xml:id="CategorySet_has_Category-validType">
                                 <xs:simpleType>
                                    <xs:restriction base="xs:NMTOKEN">
                                       <xs:enumeration value="Category"/>
                                    </xs:restriction>
                                 </xs:simpleType>
                              </xs:element>
                           </xs:sequence>
                        </xs:restriction>
                     </xs:complexContent>
                  </xs:complexType>
               </xs:element>
               <xs:element name="CategorySet_has_CategoryPosition"
                           minOccurs="0"
                           maxOccurs="unbounded"
                           xml:id="CategorySet_has_CategoryPosition">
                  <xs:annotation>
                     <xs:documentation/>
                  </xs:annotation>
                  <xs:complexType>
                     <xs:complexContent>
                        <xs:restriction base="AssociationReference">
                           <xs:sequence>
                              <xs:element name="ddiReference"
                                          type="InternationalRegistrationDataIdentifier"
                                          minOccurs="0"
                                          maxOccurs="1"
                                          xml:id="CategorySet_has_CategoryPosition-ddiReference"/>
                              <xs:element name="validType"
                                          minOccurs="1"
                                          maxOccurs="1"
                                          xml:id="CategorySet_has_CategoryPosition-validType">
                                 <xs:simpleType>
                                    <xs:restriction base="xs:NMTOKEN">
                                       <xs:enumeration value="CategoryPosition"/>
                                    </xs:restriction>
                                 </xs:simpleType>
                              </xs:element>
                           </xs:sequence>
                        </xs:restriction>
                     </xs:complexContent>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="CategoryStatistic"
               type="CategoryStatistic"
               xml:id="CategoryStatistic">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Representations::CategoryStatistic -->
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Statistics related to a specific category of an instance variable within a data set.  
            
            Examples 
            ========== 
            The percentage of females from a demographic data set.   
            
            Explanatory notes 
            =================== 
            Statistics at the data set are used as indicators during assessment of the appropriateness of using a some data for a particular purpose.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CategoryStatistic" xml:id="CategoryStatisticXsdType">
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Statistics related to a specific category of an instance variable within a data set.  
            
            Examples 
            ========== 
            The percentage of females from a demographic data set.   
            
            Explanatory notes 
            =================== 
            Statistics at the data set are used as indicators during assessment of the appropriateness of using a some data for a particular purpose.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="CategoryStatistic-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="statistic"
                     type="Statistic"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="CategoryStatistic-statistic">
            <xs:annotation>
               <xs:documentation>The value of the identified type of statistic for the category. May be repeated to provide unweighted or weighted values and different computation bases.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="typeOfCategoryStatistic"
                     type="ControlledVocabularyEntry"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="CategoryStatistic-typeOfCategoryStatistic">
            <xs:annotation>
               <xs:documentation>Indicates the type of information about the appearance of categories within the instance variable.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="CategoryStatistic_appliesTo_InstanceVariable"
                     minOccurs="1"
                     maxOccurs="unbounded"
                     xml:id="CategoryStatistic_appliesTo_InstanceVariable">
            <xs:annotation>
               <xs:documentation/>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="CategoryStatistic_appliesTo_InstanceVariable-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="CategoryStatistic_appliesTo_InstanceVariable-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="InstanceVariable"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="CategoryStatistic_for_Category"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="CategoryStatistic_for_Category">
            <xs:annotation>
               <xs:documentation/>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="CategoryStatistic_for_Category-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="CategoryStatistic_for_Category-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Category"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ClassificationFamily"
               type="ClassificationFamily"
               xml:id="ClassificationFamily">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationFamily -->
      <xs:annotation>
         <xs:documentation>Definition
            ============
            Collection of classification series related by being based on a common concept
            
            Examples
            ==========
            A set of classification series (e.g., International Standard Industrial Classification (ISIC) and North American Industrial Classification System (NAICS)) based on the same concept - economic activity or industry.
            
            Explanatory notes
            ===================
            Different classification databases may use different types of classification families and have different names for the families, as no standard has been agreed upon. [GSIM1.1] This is documented by the definingConcept relationship   (e.g. economic activity).[GSIM1.1].</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="ClassificationFamily" xml:id="ClassificationFamilyXsdType">
      <xs:annotation>
         <xs:documentation>Definition
            ============
            Collection of classification series related by being based on a common concept
            
            Examples
            ==========
            A set of classification series (e.g., International Standard Industrial Classification (ISIC) and North American Industrial Classification System (NAICS)) based on the same concept - economic activity or industry.
            
            Explanatory notes
            ===================
            Different classification databases may use different types of classification families and have different names for the families, as no standard has been agreed upon. [GSIM1.1] This is documented by the definingConcept relationship   (e.g. economic activity).[GSIM1.1].</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="catalogDetails"
                     type="CatalogDetails"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationFamily-catalogDetails">
            <xs:annotation>
               <xs:documentation>Bundles the information useful for a data catalog entry. 
    
    Examples would be creator, contributor, title, copyright, embargo, and license information
    
    A set of information useful for attribution, data discovery, and access.
    This is information that is tied to the identity of the object. If this information changes the version of the associated object changes.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationFamily-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="name"
                     type="ObjectName"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationFamily-name">
            <xs:annotation>
               <xs:documentation>Human understandable name (liguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="purpose"
                     type="InternationalString"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationFamily-purpose">
            <xs:annotation>
               <xs:documentation>Intent or reason for the object/the description of the object.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="ClassificationFamily_uses_ClassificationIndex"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationFamily_uses_ClassificationIndex">
            <xs:annotation>
               <xs:documentation>Classification indexes associated to the classification family.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="ClassificationFamily_uses_ClassificationIndex-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="ClassificationFamily_uses_ClassificationIndex-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="ClassificationIndex"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="ClassificationFamily_isDefinedBy_Concept"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationFamily_isDefinedBy_Concept">
            <xs:annotation>
               <xs:documentation>The conceptual basis for the collection of members.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="ClassificationFamily_isDefinedBy_Concept-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="ClassificationFamily_isDefinedBy_Concept-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Category"/>
                                 <xs:enumeration value="Concept"/>
                                 <xs:enumeration value="ConceptualValue"/>
                                 <xs:enumeration value="ConceptualVariable"/>
                                 <xs:enumeration value="DescriptorVariable"/>
                                 <xs:enumeration value="DimensionalKeyDefinitionMember"/>
                                 <xs:enumeration value="InstanceVariable"/>
                                 <xs:enumeration value="KeyDefinitionMember"/>
                                 <xs:enumeration value="Population"/>
                                 <xs:enumeration value="ReferenceVariable"/>
                                 <xs:enumeration value="RepresentedVariable"/>
                                 <xs:enumeration value="UnitType"/>
                                 <xs:enumeration value="Universe"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="ClassificationFamily_groups_ClassificationSeries"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationFamily_groups_ClassificationSeries">
            <xs:annotation>
               <xs:documentation/>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="ClassificationFamily_groups_ClassificationSeries-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="ClassificationFamily_groups_ClassificationSeries-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="ClassificationSeries"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ClassificationIndex"
               type="ClassificationIndex"
               xml:id="ClassificationIndex">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationIndex -->
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Ordered list of classification index entries. 
            
            Examples 
            ========== 
            An alphabetical index of a topically ordered statistical classification.  
            
            Explanatory notes 
            =================== 
            A classification index shows the relationship between text found in statistical data sources (responses to survey questionnaires, administrative records) and one or more statistical classifications.  A classification index may be used to assign the codes for classification items to observations in statistical collections. Note that a GenericStatistical Information Model (GSIM) Node is the equivalent of a DDI-CDI Member, and a GSIM Node Set is a DDI-CDI Collection. A classification index can relate to one particular or to several statistical classifications. (See the GSIM Statistical Classification Model: https://statswiki.unece.org/display/gsim/Statistical+Classification+Model.)</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="ClassificationIndex" xml:id="ClassificationIndexXsdType">
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Ordered list of classification index entries. 
            
            Examples 
            ========== 
            An alphabetical index of a topically ordered statistical classification.  
            
            Explanatory notes 
            =================== 
            A classification index shows the relationship between text found in statistical data sources (responses to survey questionnaires, administrative records) and one or more statistical classifications.  A classification index may be used to assign the codes for classification items to observations in statistical collections. Note that a GenericStatistical Information Model (GSIM) Node is the equivalent of a DDI-CDI Member, and a GSIM Node Set is a DDI-CDI Collection. A classification index can relate to one particular or to several statistical classifications. (See the GSIM Statistical Classification Model: https://statswiki.unece.org/display/gsim/Statistical+Classification+Model.)</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="allowsDuplicates"
                     type="xs:boolean"
                     minOccurs="1"
                     maxOccurs="1"
                     xml:id="ClassificationIndex-allowsDuplicates">
            <xs:annotation>
               <xs:documentation>If value is False, the members are unique within the collection - if True, there may be duplicates. (Note that a mathematical “bag” permits duplicates and is unordered - a “set” does not have duplicates and may be ordered.)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="availableLanguage"
                     type="xs:language"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationIndex-availableLanguage">
            <xs:annotation>
               <xs:documentation>A list of languages in which the Statistical Classification is available. If a Classification Index exists in several languages, the number of entries in each language may be different, as the number of terms describing any given phenomenon can change from one language to another. However, the same phenomena should be described in each language. Supports the indication of multiple languages within a single property. Supports use of codes defined by the RFC 1766.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="catalogDetails"
                     type="CatalogDetails"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationIndex-catalogDetails">
            <xs:annotation>
               <xs:documentation>Bundles the information useful for a data catalog entry. 
    
    Examples would be creator, contributor, title, copyright, embargo, and license information
    
    A set of information useful for attribution, data discovery, and access.
    This is information that is tied to the identity of the object. If this information changes the version of the associated object changes.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="codingInstruction"
                     type="CommandCode"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationIndex-codingInstruction">
            <xs:annotation>
               <xs:documentation>Additional information which drives the coding process for all entries in a Classification Index.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="corrections"
                     type="InternationalString"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationIndex-corrections">
            <xs:annotation>
               <xs:documentation>Verbal summary description of corrections, which have occurred within the Classification Index. Corrections include changing the item code associated with a classification index entry.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationIndex-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="name"
                     type="ObjectName"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationIndex-name">
            <xs:annotation>
               <xs:documentation>Human understandable name (liguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="purpose"
                     type="InternationalString"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationIndex-purpose">
            <xs:annotation>
               <xs:documentation>Intent or reason for the object/the description of the object.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="releaseDate"
                     type="CombinedDate"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationIndex-releaseDate">
            <xs:annotation>
               <xs:documentation>Date when the current version of the classification index was released.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="ClassificationIndex_isMaintainedBy_Agent"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationIndex_isMaintainedBy_Agent">
            <xs:annotation>
               <xs:documentation>The unit or group of persons within the organization responsible for the classification index (i.e., for adding, changing or deleting classification index entries).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="ClassificationIndex_isMaintainedBy_Agent-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="ClassificationIndex_isMaintainedBy_Agent-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Agent"/>
                                 <xs:enumeration value="Curator"/>
                                 <xs:enumeration value="Individual"/>
                                 <xs:enumeration value="Machine"/>
                                 <xs:enumeration value="Organization"/>
                                 <xs:enumeration value="ProcessingAgent"/>
                                 <xs:enumeration value="Service"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="ClassificationIndex_hasContact_Agent"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationIndex_hasContact_Agent">
            <xs:annotation>
               <xs:documentation>Person(s) who may be contacted for additional information about the classification index.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="ClassificationIndex_hasContact_Agent-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="ClassificationIndex_hasContact_Agent-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Agent"/>
                                 <xs:enumeration value="Curator"/>
                                 <xs:enumeration value="Individual"/>
                                 <xs:enumeration value="Machine"/>
                                 <xs:enumeration value="Organization"/>
                                 <xs:enumeration value="ProcessingAgent"/>
                                 <xs:enumeration value="Service"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="ClassificationIndex_isDefinedBy_Concept"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationIndex_isDefinedBy_Concept">
            <xs:annotation>
               <xs:documentation>The conceptual basis for the collection of members.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="ClassificationIndex_isDefinedBy_Concept-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="ClassificationIndex_isDefinedBy_Concept-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Category"/>
                                 <xs:enumeration value="Concept"/>
                                 <xs:enumeration value="ConceptualValue"/>
                                 <xs:enumeration value="ConceptualVariable"/>
                                 <xs:enumeration value="DescriptorVariable"/>
                                 <xs:enumeration value="DimensionalKeyDefinitionMember"/>
                                 <xs:enumeration value="InstanceVariable"/>
                                 <xs:enumeration value="KeyDefinitionMember"/>
                                 <xs:enumeration value="Population"/>
                                 <xs:enumeration value="ReferenceVariable"/>
                                 <xs:enumeration value="RepresentedVariable"/>
                                 <xs:enumeration value="UnitType"/>
                                 <xs:enumeration value="Universe"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="ClassificationIndex_has_ClassificationIndexEntryPosition"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationIndex_has_ClassificationIndexEntryPosition">
            <xs:annotation>
               <xs:documentation/>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="ClassificationIndex_has_ClassificationIndexEntryPosition-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="1"
                                    maxOccurs="1"
                                    xml:id="ClassificationIndex_has_ClassificationIndexEntryPosition-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="ClassificationIndexEntryPosition"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="ClassificationIndex_has_ClassificationIndexEntry"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationIndex_has_ClassificationIndexEntry">
            <xs:annotation>
               <xs:documentation/>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="ClassificationIndex_has_ClassificationIndexEntry-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="ClassificationIndex_has_ClassificationIndexEntry-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="ClassificationIndexEntry"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ClassificationIndexEntry"
               type="ClassificationIndexEntry"
               xml:id="ClassificationIndexEntry">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationIndexEntry -->
      <xs:annotation>
         <xs:documentation>Definition
            ============
            Word or a short phrase corresponding to a classification item in a statistical classification, together with the code of the corresponding classification item.
            
            Examples
            ==========
            The name of a locality, an economic activity, or an occupational title with the associated code from a corresponding classification item.
            
            Explanatory notes
            ===================
            Each Classification Index Entry (CIE) typically corresponds to one item of a Statistical Classification (SC). Although a CIE may be associated with a Classification Item (CI) at any Level of a SC, CIEs are normally associated with items at the lowest Level.
            A CIE corresponds to a CI if the CI classifies the CIE with respect to the SC of which the CI is a member.
            CIEs typically come from responses to survey questions or are verbatim descriptions in administrative records.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="ClassificationIndexEntry"
                   xml:id="ClassificationIndexEntryXsdType">
      <xs:annotation>
         <xs:documentation>Definition
            ============
            Word or a short phrase corresponding to a classification item in a statistical classification, together with the code of the corresponding classification item.
            
            Examples
            ==========
            The name of a locality, an economic activity, or an occupational title with the associated code from a corresponding classification item.
            
            Explanatory notes
            ===================
            Each Classification Index Entry (CIE) typically corresponds to one item of a Statistical Classification (SC). Although a CIE may be associated with a Classification Item (CI) at any Level of a SC, CIEs are normally associated with items at the lowest Level.
            A CIE corresponds to a CI if the CI classifies the CIE with respect to the SC of which the CI is a member.
            CIEs typically come from responses to survey questions or are verbatim descriptions in administrative records.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="catalogDetails"
                     type="CatalogDetails"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationIndexEntry-catalogDetails">
            <xs:annotation>
               <xs:documentation>Bundles the information useful for a data catalog entry. 
    
    Examples would be creator, contributor, title, copyright, embargo, and license information
    
    A set of information useful for attribution, data discovery, and access.
    This is information that is tied to the identity of the object. If this information changes the version of the associated object changes.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="codingInstruction"
                     type="CommandCode"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationIndexEntry-codingInstruction">
            <xs:annotation>
               <xs:documentation>Additional information which drives the coding process for the Index Entry. Required when coding is dependent upon one or many other factors.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="entry"
                     type="InternationalString"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationIndexEntry-entry">
            <xs:annotation>
               <xs:documentation>Text describing the type of object/unit or object property.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationIndexEntry-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="validDates"
                     type="DateRange"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationIndexEntry-validDates">
            <xs:annotation>
               <xs:documentation>The dates describing the validity period of the object. The date from which the object became valid must be defined if the map belongs to a "floating" construct. The date at which the object became invalid must be defined if the map belongs to a "floating" construct and is no longer valid.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ClassificationIndexEntryPosition"
               type="ClassificationIndexEntryPosition"
               xml:id="ClassificationIndexEntryPosition">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationIndexEntryPosition -->
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Member indicator for use with member type classification index entry.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="ClassificationIndexEntryPosition"
                   xml:id="ClassificationIndexEntryPositionXsdType">
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Member indicator for use with member type classification index entry.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationIndexEntryPosition-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="value"
                     type="xs:integer"
                     minOccurs="1"
                     maxOccurs="1"
                     xml:id="ClassificationIndexEntryPosition-value">
            <xs:annotation>
               <xs:documentation>Index value of the member in an ordered array.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="ClassificationIndexEntryPosition_indexes_ClassificationIndexEntry"
                     minOccurs="1"
                     maxOccurs="1"
                     xml:id="ClassificationIndexEntryPosition_indexes_ClassificationIndexEntry">
            <xs:annotation>
               <xs:documentation>Restricts member target class to classification index entry.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="ClassificationIndexEntryPosition_indexes_ClassificationIndexEntry-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="ClassificationIndexEntryPosition_indexes_ClassificationIndexEntry-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="ClassificationIndexEntry"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ClassificationItem"
               type="ClassificationItem"
               xml:id="ClassificationItem">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationItem -->
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            A space for a category within a statistical classification.   
            
            Examples 
            ========== 
            In the 2012 North American Industry Classification System (NAICS) one classification item has the category "construction", and has the Code 23, which designates construction in NAICS.
            
            Explanatory notes 
            =================== 
            A classification item defines the content and the borders of the category. A unit can be classified to one and only one item at each level of a statistical classification. As such a classification item is a placeholder for a position in a statistical classification. It contains a designation, for which code is a common kind; a category; and possibly other things.   This differentiates it from code which is a only kind of designation, in particular if it is an alphanumeric string assigned to stand in place of a category. Statistical classifications often have multiple levels. A level is defined as a set of classification items each the same number of relationships from the top or root classification item.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="ClassificationItem" xml:id="ClassificationItemXsdType">
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            A space for a category within a statistical classification.   
            
            Examples 
            ========== 
            In the 2012 North American Industry Classification System (NAICS) one classification item has the category "construction", and has the Code 23, which designates construction in NAICS.
            
            Explanatory notes 
            =================== 
            A classification item defines the content and the borders of the category. A unit can be classified to one and only one item at each level of a statistical classification. As such a classification item is a placeholder for a position in a statistical classification. It contains a designation, for which code is a common kind; a category; and possibly other things.   This differentiates it from code which is a only kind of designation, in particular if it is an alphanumeric string assigned to stand in place of a category. Statistical classifications often have multiple levels. A level is defined as a set of classification items each the same number of relationships from the top or root classification item.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="changeFromPreviousVersion"
                     type="InternationalString"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationItem-changeFromPreviousVersion">
            <xs:annotation>
               <xs:documentation>Describes the changes, which the item has been subject to from the previous version to the actual statistical classification.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="changeLog"
                     type="InternationalString"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationItem-changeLog">
            <xs:annotation>
               <xs:documentation>Describes the changes, which the item has been subject to during the life time of the actual statistical classification.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="explanatoryNotes"
                     type="InternationalString"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationItem-explanatoryNotes">
            <xs:annotation>
               <xs:documentation>A classification item may be associated with explanatory notes, which further describe and clarify the contents of the category. Explanatory notes consist of: General note: Contains either additional information about the category, or a general description of the category, which is not structured according to the "includes", "includes also", "excludes" pattern. Includes: Specifies the contents of the category. Includes also: A list of borderline cases, which belong to the described category. Excludes: A list of borderline cases, which do not belong to the described category. Excluded cases may contain a reference to the classification items to which the excluded cases belong.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="futureNotes"
                     type="InternationalString"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationItem-futureNotes">
            <xs:annotation>
               <xs:documentation>The future events describe an intended or implemented change (or a number of changes) related to an invalid item (e.g., these changes may have turned the now invalid item into one or several successor items). This allows for the possibility of following successors of the item in the future.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationItem-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="isGenerated"
                     type="xs:boolean"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationItem-isGenerated">
            <xs:annotation>
               <xs:documentation>Indicates whether or not the item has been generated to make the level to which it belongs complete.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="isValid"
                     type="xs:boolean"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationItem-isValid">
            <xs:annotation>
               <xs:documentation>Indicates whether or not the item is currently valid. If updates are allowed in the Statistical Classification, an item may be restricted in its validity, i.e. it may become valid or invalid after the Statistical Classification has been released.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="name"
                     type="ObjectName"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationItem-name">
            <xs:annotation>
               <xs:documentation>Human understandable name (liguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage. A Classification Item has an official name as provided by the owner or maintenance unit. The name describes the content of the category. The name is unique within the Statistical Classification to which the item belongs, except for categories that are identical at more than one level in a hierarchical classification. Use the context attribute to differentiate official names or alternate names for the Classification Item.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="validDates"
                     type="DateRange"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationItem-validDates">
            <xs:annotation>
               <xs:documentation>The dates describing the validity period of the object. The date from which the object became valid must be defined if the map belongs to a "floating" construct. The date at which the object became invalid must be defined if the map belongs to a "floating" construct and is no longer valid.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="ClassificationItem_excludes_ClassificationItem"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationItem_excludes_ClassificationItem">
            <xs:annotation>
               <xs:documentation>Classification items to which the excluded cases belong (as described in explanatory notes).</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="ClassificationItem_excludes_ClassificationItem-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="ClassificationItem_excludes_ClassificationItem-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="ClassificationItem"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="ClassificationItem_denotes_Category"
                     minOccurs="1"
                     maxOccurs="1"
                     xml:id="ClassificationItem_denotes_Category">
            <xs:annotation>
               <xs:documentation>A definition for the code. Specialization of denotes for categories.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="ClassificationItem_denotes_Category-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="ClassificationItem_denotes_Category-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Category"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="ClassificationItem_uses_Notation"
                     minOccurs="1"
                     maxOccurs="1"
                     xml:id="ClassificationItem_uses_Notation">
            <xs:annotation>
               <xs:documentation>Classification item uses a notation.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="ClassificationItem_uses_Notation-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="ClassificationItem_uses_Notation-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="Notation"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="ClassificationItem_hasRulingBy_AuthorizationSource"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationItem_hasRulingBy_AuthorizationSource">
            <xs:annotation>
               <xs:documentation>Case law rulings related to the classification item.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="ClassificationItem_hasRulingBy_AuthorizationSource-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="ClassificationItem_hasRulingBy_AuthorizationSource-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="AuthorizationSource"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ClassificationItemPosition"
               type="ClassificationItemPosition"
               xml:id="ClassificationItemPosition">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationItemPosition -->
      <xs:annotation>
         <xs:documentation>Definition
            ============
            Provides a classification item with an index conveying the order of the classification item within a sequence, expressed as an integer, progressing upward from 0 or 1.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="ClassificationItemPosition"
                   xml:id="ClassificationItemPositionXsdType">
      <xs:annotation>
         <xs:documentation>Definition
            ============
            Provides a classification item with an index conveying the order of the classification item within a sequence, expressed as an integer, progressing upward from 0 or 1.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationItemPosition-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="value"
                     type="xs:integer"
                     minOccurs="1"
                     maxOccurs="1"
                     xml:id="ClassificationItemPosition-value">
            <xs:annotation>
               <xs:documentation>Index value of the member in an ordered array.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="ClassificationItemPosition_indexes_ClassificationItem"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationItemPosition_indexes_ClassificationItem">
            <xs:annotation>
               <xs:documentation>Classification item position indexes zero to one classification items. The member containing the designation of the classification item.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="ClassificationItemPosition_indexes_ClassificationItem-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="ClassificationItemPosition_indexes_ClassificationItem-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="ClassificationItem"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ClassificationItemRelationship"
               type="ClassificationItemRelationship"
               xml:id="ClassificationItemRelationship">
    <!-- based on the UML class DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationItemRelationship -->
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Source-target relationship between classification items in a classification item relation structure.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="ClassificationItemRelationship"
                   xml:id="ClassificationItemRelationshipXsdType">
      <xs:annotation>
         <xs:documentation>Definition 
            ============ 
            Source-target relationship between classification items in a classification item relation structure.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="identifier"
                     type="Identifier"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationItemRelationship-identifier">
            <xs:annotation>
               <xs:documentation>Identifier for objects requiring short- or long-lasting referencing and management.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="semantics"
                     type="ControlledVocabularyEntry"
                     minOccurs="0"
                     maxOccurs="1"
                     xml:id="ClassificationItemRelationship-semantics">
            <xs:annotation>
               <xs:documentation>Specifies the semantics of the object in reference to a vocabulary, ontology, etc.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="ClassificationItemRelationship_hasSource_ClassificationItem"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationItemRelationship_hasSource_ClassificationItem">
            <xs:annotation>
               <xs:documentation/>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="ClassificationItemRelationship_hasSource_ClassificationItem-ddiReference"/>
                        <xs:element name="validType"
                                    minOccurs="0"
                                    maxOccurs="unbounded"
                                    xml:id="ClassificationItemRelationship_hasSource_ClassificationItem-validType">
                           <xs:simpleType>
                              <xs:restriction base="xs:NMTOKEN">
                                 <xs:enumeration value="ClassificationItem"/>
                              </xs:restriction>
                           </xs:simpleType>
                        </xs:element>
                     </xs:sequence>
                  </xs:restriction>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
         <xs:element name="ClassificationItemRelationship_hasTarget_ClassificationItem"
                     minOccurs="0"
                     maxOccurs="unbounded"
                     xml:id="ClassificationItemRelationship_hasTarget_ClassificationItem">
            <xs:annotation>
               <xs:documentation>Note that this can be realized as a collection to support tuples.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:complexContent>
                  <xs:restriction base="AssociationReference">
                     <xs:sequence>
                        <xs:element name="ddiReference"
                                    type="InternationalRegistrationDataIdentifier"
                                    minOccurs="0"
                                    maxOccurs="1"
                                    xml:id="ClassificationItemRelationship_hasTarget_ClassificationItem-ddiR